function cov_1azmom8sei(){var path="/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/dbConnector.js";var hash="12668836fafe9e9f992b88c27f2ab1b54fe39e96";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/dbConnector.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:36}},"1":{start:{line:2,column:57},end:{line:2,column:85}},"2":{start:{line:3,column:0},end:{line:3,column:27}},"3":{start:{line:4,column:12},end:{line:4,column:23}},"4":{start:{line:7,column:22},end:{line:7,column:51}},"5":{start:{line:10,column:0},end:{line:12,column:1}},"6":{start:{line:11,column:4},end:{line:11,column:110}},"7":{start:{line:14,column:12},end:{line:28,column:2}},"8":{start:{line:32,column:4},end:{line:48,column:5}},"9":{start:{line:32,column:17},end:{line:32,column:18}},"10":{start:{line:33,column:8},end:{line:47,column:9}},"11":{start:{line:34,column:12},end:{line:34,column:38}},"12":{start:{line:36,column:12},end:{line:36,column:47}},"13":{start:{line:36,column:35},end:{line:36,column:47}},"14":{start:{line:39,column:12},end:{line:46,column:13}},"15":{start:{line:43,column:16},end:{line:43,column:90}},"16":{start:{line:43,column:45},end:{line:43,column:88}},"17":{start:{line:45,column:16},end:{line:45,column:28}},"18":{start:{line:51,column:0},end:{line:196,column:2}},"19":{start:{line:64,column:8},end:{line:83,column:30}},"20":{start:{line:66,column:12},end:{line:82,column:13}},"21":{start:{line:67,column:16},end:{line:67,column:55}},"22":{start:{line:68,column:16},end:{line:70,column:17}},"23":{start:{line:69,column:20},end:{line:69,column:60}},"24":{start:{line:71,column:31},end:{line:71,column:70}},"25":{start:{line:72,column:16},end:{line:74,column:17}},"26":{start:{line:73,column:20},end:{line:73,column:59}},"27":{start:{line:75,column:16},end:{line:75,column:28}},"28":{start:{line:77,column:16},end:{line:77,column:26}},"29":{start:{line:79,column:16},end:{line:81,column:17}},"30":{start:{line:80,column:20},end:{line:80,column:41}},"31":{start:{line:98,column:8},end:{line:126,column:30}},"32":{start:{line:100,column:12},end:{line:125,column:13}},"33":{start:{line:101,column:16},end:{line:106,column:17}},"34":{start:{line:102,column:39},end:{line:102,column:68}},"35":{start:{line:103,column:20},end:{line:105,column:21}},"36":{start:{line:104,column:24},end:{line:104,column:42}},"37":{start:{line:108,column:16},end:{line:108,column:55}},"38":{start:{line:109,column:16},end:{line:111,column:17}},"39":{start:{line:110,column:20},end:{line:110,column:60}},"40":{start:{line:112,column:31},end:{line:112,column:70}},"41":{start:{line:114,column:16},end:{line:116,column:17}},"42":{start:{line:115,column:20},end:{line:115,column:56}},"43":{start:{line:118,column:16},end:{line:118,column:28}},"44":{start:{line:120,column:16},end:{line:120,column:26}},"45":{start:{line:122,column:16},end:{line:124,column:17}},"46":{start:{line:123,column:20},end:{line:123,column:41}},"47":{start:{line:144,column:8},end:{line:194,column:30}},"48":{start:{line:146,column:12},end:{line:193,column:13}},"49":{start:{line:148,column:16},end:{line:150,column:17}},"50":{start:{line:149,column:20},end:{line:149,column:72}},"51":{start:{line:152,column:16},end:{line:157,column:17}},"52":{start:{line:153,column:39},end:{line:153,column:68}},"53":{start:{line:154,column:20},end:{line:156,column:21}},"54":{start:{line:155,column:24},end:{line:155,column:42}},"55":{start:{line:159,column:16},end:{line:159,column:55}},"56":{start:{line:160,column:16},end:{line:162,column:17}},"57":{start:{line:161,column:20},end:{line:161,column:60}},"58":{start:{line:165,column:30},end:{line:165,column:69}},"59":{start:{line:166,column:31},end:{line:166,column:45}},"60":{start:{line:169,column:27},end:{line:169,column:42}},"61":{start:{line:170,column:33},end:{line:170,column:70}},"62":{start:{line:173,column:27},end:{line:173,column:75}},"63":{start:{line:176,column:27},end:{line:180,column:13}},"64":{start:{line:182,column:16},end:{line:184,column:17}},"65":{start:{line:183,column:20},end:{line:183,column:58}},"66":{start:{line:186,column:16},end:{line:186,column:30}},"67":{start:{line:188,column:16},end:{line:188,column:26}},"68":{start:{line:190,column:16},end:{line:192,column:17}},"69":{start:{line:191,column:20},end:{line:191,column:41}}},fnMap:{"0":{name:"executeWithRetry",decl:{start:{line:31,column:15},end:{line:31,column:31}},loc:{start:{line:31,column:80},end:{line:49,column:1}},line:31},"1":{name:"(anonymous_1)",decl:{start:{line:43,column:34},end:{line:43,column:35}},loc:{start:{line:43,column:45},end:{line:43,column:88}},line:43},"2":{name:"(anonymous_2)",decl:{start:{line:63,column:4},end:{line:63,column:5}},loc:{start:{line:63,column:78},end:{line:84,column:5}},line:63},"3":{name:"(anonymous_3)",decl:{start:{line:64,column:32},end:{line:64,column:33}},loc:{start:{line:64,column:46},end:{line:83,column:9}},line:64},"4":{name:"(anonymous_4)",decl:{start:{line:97,column:4},end:{line:97,column:5}},loc:{start:{line:97,column:69},end:{line:127,column:5}},line:97},"5":{name:"(anonymous_5)",decl:{start:{line:98,column:32},end:{line:98,column:33}},loc:{start:{line:98,column:46},end:{line:126,column:9}},line:98},"6":{name:"(anonymous_6)",decl:{start:{line:143,column:4},end:{line:143,column:5}},loc:{start:{line:143,column:100},end:{line:195,column:5}},line:143},"7":{name:"(anonymous_7)",decl:{start:{line:144,column:32},end:{line:144,column:33}},loc:{start:{line:144,column:46},end:{line:194,column:9}},line:144}},branchMap:{"0":{loc:{start:{line:10,column:0},end:{line:12,column:1}},type:"if",locations:[{start:{line:10,column:0},end:{line:12,column:1}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:10},"1":{loc:{start:{line:10,column:4},end:{line:10,column:52}},type:"binary-expr",locations:[{start:{line:10,column:4},end:{line:10,column:16}},{start:{line:10,column:20},end:{line:10,column:36}},{start:{line:10,column:40},end:{line:10,column:52}}],line:10},"2":{loc:{start:{line:17,column:14},end:{line:17,column:35}},type:"binary-expr",locations:[{start:{line:17,column:14},end:{line:17,column:29}},{start:{line:17,column:33},end:{line:17,column:35}}],line:17},"3":{loc:{start:{line:19,column:21},end:{line:19,column:60}},type:"binary-expr",locations:[{start:{line:19,column:21},end:{line:19,column:54}},{start:{line:19,column:58},end:{line:19,column:60}}],line:19},"4":{loc:{start:{line:20,column:16},end:{line:20,column:49}},type:"binary-expr",locations:[{start:{line:20,column:16},end:{line:20,column:44}},{start:{line:20,column:48},end:{line:20,column:49}}],line:20},"5":{loc:{start:{line:21,column:20},end:{line:21,column:61}},type:"binary-expr",locations:[{start:{line:21,column:20},end:{line:21,column:52}},{start:{line:21,column:56},end:{line:21,column:61}}],line:21},"6":{loc:{start:{line:22,column:24},end:{line:22,column:70}},type:"binary-expr",locations:[{start:{line:22,column:24},end:{line:22,column:61}},{start:{line:22,column:65},end:{line:22,column:70}}],line:22},"7":{loc:{start:{line:23,column:10},end:{line:23,column:39}},type:"binary-expr",locations:[{start:{line:23,column:10},end:{line:23,column:31}},{start:{line:23,column:35},end:{line:23,column:39}}],line:23},"8":{loc:{start:{line:24,column:14},end:{line:24,column:38}},type:"binary-expr",locations:[{start:{line:24,column:14},end:{line:24,column:26}},{start:{line:24,column:30},end:{line:24,column:38}}],line:24},"9":{loc:{start:{line:31,column:36},end:{line:31,column:47}},type:"default-arg",locations:[{start:{line:31,column:46},end:{line:31,column:47}}],line:31},"10":{loc:{start:{line:31,column:49},end:{line:31,column:61}},type:"default-arg",locations:[{start:{line:31,column:57},end:{line:31,column:61}}],line:31},"11":{loc:{start:{line:31,column:63},end:{line:31,column:78}},type:"default-arg",locations:[{start:{line:31,column:74},end:{line:31,column:78}}],line:31},"12":{loc:{start:{line:36,column:12},end:{line:36,column:47}},type:"if",locations:[{start:{line:36,column:12},end:{line:36,column:47}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:36},"13":{loc:{start:{line:39,column:12},end:{line:46,column:13}},type:"if",locations:[{start:{line:39,column:12},end:{line:46,column:13}},{start:{line:44,column:19},end:{line:46,column:13}}],line:39},"14":{loc:{start:{line:39,column:16},end:{line:42,column:51}},type:"binary-expr",locations:[{start:{line:39,column:16},end:{line:39,column:45}},{start:{line:40,column:16},end:{line:40,column:42}},{start:{line:41,column:16},end:{line:41,column:42}},{start:{line:42,column:16},end:{line:42,column:51}}],line:39},"15":{loc:{start:{line:63,column:38},end:{line:63,column:59}},type:"default-arg",locations:[{start:{line:63,column:55},end:{line:63,column:59}}],line:63},"16":{loc:{start:{line:63,column:61},end:{line:63,column:76}},type:"default-arg",locations:[{start:{line:63,column:72},end:{line:63,column:76}}],line:63},"17":{loc:{start:{line:68,column:16},end:{line:70,column:17}},type:"if",locations:[{start:{line:68,column:16},end:{line:70,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:68},"18":{loc:{start:{line:72,column:16},end:{line:74,column:17}},type:"if",locations:[{start:{line:72,column:16},end:{line:74,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:72},"19":{loc:{start:{line:72,column:20},end:{line:72,column:51}},type:"binary-expr",locations:[{start:{line:72,column:20},end:{line:72,column:34}},{start:{line:72,column:38},end:{line:72,column:51}}],line:72},"20":{loc:{start:{line:79,column:16},end:{line:81,column:17}},type:"if",locations:[{start:{line:79,column:16},end:{line:81,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:79},"21":{loc:{start:{line:97,column:52},end:{line:97,column:67}},type:"default-arg",locations:[{start:{line:97,column:63},end:{line:97,column:67}}],line:97},"22":{loc:{start:{line:101,column:16},end:{line:106,column:17}},type:"if",locations:[{start:{line:101,column:16},end:{line:106,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:101},"23":{loc:{start:{line:103,column:20},end:{line:105,column:21}},type:"if",locations:[{start:{line:103,column:20},end:{line:105,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:103},"24":{loc:{start:{line:109,column:16},end:{line:111,column:17}},type:"if",locations:[{start:{line:109,column:16},end:{line:111,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:109},"25":{loc:{start:{line:114,column:16},end:{line:116,column:17}},type:"if",locations:[{start:{line:114,column:16},end:{line:116,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:114},"26":{loc:{start:{line:122,column:16},end:{line:124,column:17}},type:"if",locations:[{start:{line:122,column:16},end:{line:124,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:122},"27":{loc:{start:{line:143,column:68},end:{line:143,column:81}},type:"default-arg",locations:[{start:{line:143,column:79},end:{line:143,column:81}}],line:143},"28":{loc:{start:{line:143,column:83},end:{line:143,column:98}},type:"default-arg",locations:[{start:{line:143,column:94},end:{line:143,column:98}}],line:143},"29":{loc:{start:{line:148,column:16},end:{line:150,column:17}},type:"if",locations:[{start:{line:148,column:16},end:{line:150,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:148},"30":{loc:{start:{line:152,column:16},end:{line:157,column:17}},type:"if",locations:[{start:{line:152,column:16},end:{line:157,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:152},"31":{loc:{start:{line:154,column:20},end:{line:156,column:21}},type:"if",locations:[{start:{line:154,column:20},end:{line:156,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:154},"32":{loc:{start:{line:154,column:24},end:{line:154,column:107}},type:"binary-expr",locations:[{start:{line:154,column:24},end:{line:154,column:54}},{start:{line:154,column:58},end:{line:154,column:84}},{start:{line:154,column:88},end:{line:154,column:107}}],line:154},"33":{loc:{start:{line:160,column:16},end:{line:162,column:17}},type:"if",locations:[{start:{line:160,column:16},end:{line:162,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:160},"34":{loc:{start:{line:182,column:16},end:{line:184,column:17}},type:"if",locations:[{start:{line:182,column:16},end:{line:184,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:182},"35":{loc:{start:{line:190,column:16},end:{line:192,column:17}},type:"if",locations:[{start:{line:190,column:16},end:{line:192,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:190}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[0],"11":[0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0],"16":[0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0],"28":[0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"12668836fafe9e9f992b88c27f2ab1b54fe39e96"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1azmom8sei=function(){return actualCoverage;};}return actualCoverage;}cov_1azmom8sei();const db=(cov_1azmom8sei().s[0]++,require('mysql2/promise'));const{getArrayItem,addArrayItem,delPrefixKeyItem}=(cov_1azmom8sei().s[1]++,require('./redis.Connector'));cov_1azmom8sei().s[2]++;require('dotenv').config();const env=(cov_1azmom8sei().s[3]++,process.env);// Check if Redis is enabled (default: true)
const REDIS_ENABLED=(cov_1azmom8sei().s[4]++,env.REDIS_ENABLED!=='false');// Validate required database configuration
cov_1azmom8sei().s[5]++;if((cov_1azmom8sei().b[1][0]++,!env.DB_HOST)||(cov_1azmom8sei().b[1][1]++,!env.DB_USERNAME)||(cov_1azmom8sei().b[1][2]++,!env.DB_NAME)){cov_1azmom8sei().b[0][0]++;cov_1azmom8sei().s[6]++;throw new Error('Missing required database configuration: DB_HOST, DB_USERNAME, and DB_NAME must be set');}else{cov_1azmom8sei().b[0][1]++;}const con=(cov_1azmom8sei().s[7]++,db.createPool({host:env.DB_HOST,user:env.DB_USERNAME,password:(cov_1azmom8sei().b[2][0]++,env.DB_PASSWORD)||(cov_1azmom8sei().b[2][1]++,''),database:env.DB_NAME,connectionLimit:(cov_1azmom8sei().b[3][0]++,parseInt(env.DB_CONNECTION_LIMIT))||(cov_1azmom8sei().b[3][1]++,10),queueLimit:(cov_1azmom8sei().b[4][0]++,parseInt(env.DB_QUEUE_LIMIT))||(cov_1azmom8sei().b[4][1]++,0),connectTimeout:(cov_1azmom8sei().b[5][0]++,parseInt(env.DB_CONNECT_TIMEOUT))||(cov_1azmom8sei().b[5][1]++,10000),multipleStatements:(cov_1azmom8sei().b[6][0]++,env.DB_MULTIPLE_STATEMENTS==='true')||(cov_1azmom8sei().b[6][1]++,false),port:(cov_1azmom8sei().b[7][0]++,parseInt(env.DB_PORT))||(cov_1azmom8sei().b[7][1]++,3306),timezone:(cov_1azmom8sei().b[8][0]++,env.TIMEZONE)||(cov_1azmom8sei().b[8][1]++,'+00:00'),waitForConnections:true,enableKeepAlive:true,keepAliveInitialDelay:0}));// Retry helper function with optional database switching
async function executeWithRetry(fn,retries=(cov_1azmom8sei().b[9][0]++,3),delay=(cov_1azmom8sei().b[10][0]++,1000),database=(cov_1azmom8sei().b[11][0]++,null)){cov_1azmom8sei().f[0]++;cov_1azmom8sei().s[8]++;for(let i=(cov_1azmom8sei().s[9]++,0);i<retries;i++){cov_1azmom8sei().s[10]++;try{cov_1azmom8sei().s[11]++;return await fn(database);}catch(error){cov_1azmom8sei().s[12]++;if(i===retries-1){cov_1azmom8sei().b[12][0]++;cov_1azmom8sei().s[13]++;throw error;}else{cov_1azmom8sei().b[12][1]++;}// Retry only on connection errors
cov_1azmom8sei().s[14]++;if((cov_1azmom8sei().b[14][0]++,error.code==='ECONNREFUSED')||(cov_1azmom8sei().b[14][1]++,error.code==='ETIMEDOUT')||(cov_1azmom8sei().b[14][2]++,error.code==='ENOTFOUND')||(cov_1azmom8sei().b[14][3]++,error.code==='ER_CON_COUNT_ERROR')){cov_1azmom8sei().b[13][0]++;cov_1azmom8sei().s[15]++;await new Promise(resolve=>{cov_1azmom8sei().f[1]++;cov_1azmom8sei().s[16]++;return setTimeout(resolve,delay*Math.pow(2,i));});}else{cov_1azmom8sei().b[13][1]++;cov_1azmom8sei().s[17]++;throw error;}}}}cov_1azmom8sei().s[18]++;module.exports={/**
     * Executes a SQL query and returns the result from the cache or the database.
     * If a resetCacheName is provided, it deletes the cache item before executing the query.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string|null} resetCacheName - The name of the cache item to reset (optional).
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<any>} - A promise that resolves with the result of the query.
     * @throws {Error} - If an error occurs during the query execution.
     */async QuaryCache(sql,parameters,resetCacheName=(cov_1azmom8sei().b[15][0]++,null),database=(cov_1azmom8sei().b[16][0]++,null)){cov_1azmom8sei().f[2]++;cov_1azmom8sei().s[19]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[3]++;let connection;cov_1azmom8sei().s[20]++;try{cov_1azmom8sei().s[21]++;connection=await con.getConnection();cov_1azmom8sei().s[22]++;if(db){cov_1azmom8sei().b[17][0]++;cov_1azmom8sei().s[23]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[17][1]++;}const[data]=(cov_1azmom8sei().s[24]++,await connection.query(sql,parameters));cov_1azmom8sei().s[25]++;if((cov_1azmom8sei().b[19][0]++,resetCacheName)&&(cov_1azmom8sei().b[19][1]++,REDIS_ENABLED)){cov_1azmom8sei().b[18][0]++;cov_1azmom8sei().s[26]++;await delPrefixKeyItem(resetCacheName);}else{cov_1azmom8sei().b[18][1]++;}cov_1azmom8sei().s[27]++;return data;}catch(err){cov_1azmom8sei().s[28]++;throw err;}finally{cov_1azmom8sei().s[29]++;if(connection){cov_1azmom8sei().b[20][0]++;cov_1azmom8sei().s[30]++;connection.release();}else{cov_1azmom8sei().b[20][1]++;}}},3,1000,database);},/**
     * Retrieves data from cache or database based on the provided SQL query and parameters.
     * If the data is found in the cache, it is returned. Otherwise, the data is fetched from the database,
     * stored in the cache, and then returned.
     *
     * @param {string} sql - The SQL query to be executed.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string} cacheName - The name of the cache to store the data.
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<Array>} - A promise that resolves to the retrieved data.
     * @throws {Error} - If there is an error while retrieving the data.
     */async getCacheQuery(sql,parameters,cacheName,database=(cov_1azmom8sei().b[21][0]++,null)){cov_1azmom8sei().f[4]++;cov_1azmom8sei().s[31]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[5]++;let connection;cov_1azmom8sei().s[32]++;try{cov_1azmom8sei().s[33]++;if(REDIS_ENABLED){cov_1azmom8sei().b[22][0]++;const cachedData=(cov_1azmom8sei().s[34]++,await getArrayItem(cacheName));cov_1azmom8sei().s[35]++;if(cachedData.length>0){cov_1azmom8sei().b[23][0]++;cov_1azmom8sei().s[36]++;return cachedData;}else{cov_1azmom8sei().b[23][1]++;}}else{cov_1azmom8sei().b[22][1]++;}cov_1azmom8sei().s[37]++;connection=await con.getConnection();cov_1azmom8sei().s[38]++;if(db){cov_1azmom8sei().b[24][0]++;cov_1azmom8sei().s[39]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[24][1]++;}const[data]=(cov_1azmom8sei().s[40]++,await connection.query(sql,parameters));cov_1azmom8sei().s[41]++;if(REDIS_ENABLED){cov_1azmom8sei().b[25][0]++;cov_1azmom8sei().s[42]++;await addArrayItem(cacheName,data);}else{cov_1azmom8sei().b[25][1]++;}cov_1azmom8sei().s[43]++;return data;}catch(err){cov_1azmom8sei().s[44]++;throw err;}finally{cov_1azmom8sei().s[45]++;if(connection){cov_1azmom8sei().b[26][0]++;cov_1azmom8sei().s[46]++;connection.release();}else{cov_1azmom8sei().b[26][1]++;}}},3,1000,database);},/**
     * Retrieves paginated data from cache or database based on the provided SQL query and parameters.
     * If the data is available in cache, it is returned directly. Otherwise, the data is fetched from the database,
     * paginated, and then stored in the cache for future use.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be used in the SQL query.
     * @param {string} cacheName - The name of the cache to store the data.
     * @param {number} page - The page number of the data to retrieve.
     * @param {number} [pageSize=30] - The number of records per page. Defaults to 30 if not provided.
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<Object>} - A promise that resolves to an object containing the paginated data.
     * @throws {Error} - If an error occurs during the execution of the function.
     */async getCacheQueryPagination(sql,parameters,cacheName,page,pageSize=(cov_1azmom8sei().b[27][0]++,30),database=(cov_1azmom8sei().b[28][0]++,null)){cov_1azmom8sei().f[6]++;cov_1azmom8sei().s[47]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[7]++;let connection;cov_1azmom8sei().s[48]++;try{cov_1azmom8sei().s[49]++;// Validate pageSize to prevent division by zero
if(pageSize<=0){cov_1azmom8sei().b[29][0]++;cov_1azmom8sei().s[50]++;throw new Error('Page size must be greater than 0');}else{cov_1azmom8sei().b[29][1]++;}cov_1azmom8sei().s[51]++;if(REDIS_ENABLED){cov_1azmom8sei().b[30][0]++;const cachedData=(cov_1azmom8sei().s[52]++,await getArrayItem(cacheName));cov_1azmom8sei().s[53]++;if((cov_1azmom8sei().b[32][0]++,typeof cachedData==='object')&&(cov_1azmom8sei().b[32][1]++,!Array.isArray(cachedData))&&(cov_1azmom8sei().b[32][2]++,cachedData!==null)){cov_1azmom8sei().b[31][0]++;cov_1azmom8sei().s[54]++;return cachedData;}else{cov_1azmom8sei().b[31][1]++;}}else{cov_1azmom8sei().b[30][1]++;}cov_1azmom8sei().s[55]++;connection=await con.getConnection();cov_1azmom8sei().s[56]++;if(db){cov_1azmom8sei().b[33][0]++;cov_1azmom8sei().s[57]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[33][1]++;}// Get total count with original query
const[allData]=(cov_1azmom8sei().s[58]++,await connection.query(sql,parameters));const totalCount=(cov_1azmom8sei().s[59]++,allData.length);// Modify SQL for pagination
const offset=(cov_1azmom8sei().s[60]++,page*pageSize);const paginatedSql=(cov_1azmom8sei().s[61]++,`${sql} LIMIT ${offset}, ${pageSize}`);// Get paginated data
const[data]=(cov_1azmom8sei().s[62]++,await connection.query(paginatedSql,parameters));// Prepare result
const result=(cov_1azmom8sei().s[63]++,{totalCount,pageCount:Math.ceil(totalCount/pageSize),detail:data});cov_1azmom8sei().s[64]++;if(REDIS_ENABLED){cov_1azmom8sei().b[34][0]++;cov_1azmom8sei().s[65]++;await addArrayItem(cacheName,result);}else{cov_1azmom8sei().b[34][1]++;}cov_1azmom8sei().s[66]++;return result;}catch(err){cov_1azmom8sei().s[67]++;throw err;}finally{cov_1azmom8sei().s[68]++;if(connection){cov_1azmom8sei().b[35][0]++;cov_1azmom8sei().s[69]++;connection.release();}else{cov_1azmom8sei().b[35][1]++;}}},3,1000,database);}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,