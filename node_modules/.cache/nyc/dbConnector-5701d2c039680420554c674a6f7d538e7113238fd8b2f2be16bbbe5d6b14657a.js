function cov_1azmom8sei(){var path="/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/dbConnector.js";var hash="fe2938aea70ca032f5b4f59d948620ce5fcf2b41";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/dbConnector.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:36}},"1":{start:{line:2,column:57},end:{line:2,column:85}},"2":{start:{line:3,column:47},end:{line:3,column:72}},"3":{start:{line:4,column:42},end:{line:4,column:74}},"4":{start:{line:5,column:0},end:{line:5,column:27}},"5":{start:{line:6,column:12},end:{line:6,column:23}},"6":{start:{line:9,column:22},end:{line:9,column:51}},"7":{start:{line:16,column:19},end:{line:16,column:21}},"8":{start:{line:19,column:4},end:{line:21,column:5}},"9":{start:{line:20,column:8},end:{line:20,column:69}},"10":{start:{line:23,column:4},end:{line:25,column:5}},"11":{start:{line:24,column:8},end:{line:24,column:72}},"12":{start:{line:27,column:4},end:{line:29,column:5}},"13":{start:{line:28,column:8},end:{line:28,column:71}},"14":{start:{line:32,column:4},end:{line:34,column:5}},"15":{start:{line:33,column:8},end:{line:33,column:75}},"16":{start:{line:36,column:4},end:{line:38,column:5}},"17":{start:{line:37,column:8},end:{line:37,column:97}},"18":{start:{line:40,column:4},end:{line:42,column:5}},"19":{start:{line:41,column:8},end:{line:41,column:86}},"20":{start:{line:44,column:4},end:{line:46,column:5}},"21":{start:{line:45,column:8},end:{line:45,column:114}},"22":{start:{line:49,column:4},end:{line:57,column:5}},"23":{start:{line:50,column:8},end:{line:52,column:9}},"24":{start:{line:51,column:12},end:{line:51,column:148}},"25":{start:{line:54,column:8},end:{line:56,column:9}},"26":{start:{line:55,column:12},end:{line:55,column:85}},"27":{start:{line:59,column:4},end:{line:71,column:5}},"28":{start:{line:60,column:29},end:{line:68,column:20}},"29":{start:{line:63,column:33},end:{line:63,column:45}},"30":{start:{line:70,column:8},end:{line:70,column:38}},"31":{start:{line:75,column:0},end:{line:75,column:24}},"32":{start:{line:78,column:19},end:{line:92,column:1}},"33":{start:{line:94,column:12},end:{line:94,column:37}},"34":{start:{line:97,column:21},end:{line:97,column:26}},"35":{start:{line:101,column:4},end:{line:131,column:5}},"36":{start:{line:101,column:17},end:{line:101,column:18}},"37":{start:{line:102,column:8},end:{line:130,column:9}},"38":{start:{line:103,column:12},end:{line:105,column:13}},"39":{start:{line:104,column:16},end:{line:104,column:87}},"40":{start:{line:107,column:12},end:{line:114,column:13}},"41":{start:{line:108,column:16},end:{line:113,column:19}},"42":{start:{line:111,column:24},end:{line:111,column:94}},"43":{start:{line:111,column:41},end:{line:111,column:84}},"44":{start:{line:116,column:12},end:{line:116,column:38}},"45":{start:{line:118,column:12},end:{line:118,column:47}},"46":{start:{line:118,column:35},end:{line:118,column:47}},"47":{start:{line:121,column:12},end:{line:129,column:13}},"48":{start:{line:126,column:16},end:{line:126,column:90}},"49":{start:{line:126,column:45},end:{line:126,column:88}},"50":{start:{line:128,column:16},end:{line:128,column:28}},"51":{start:{line:134,column:0},end:{line:441,column:2}},"52":{start:{line:150,column:8},end:{line:178,column:30}},"53":{start:{line:152,column:12},end:{line:177,column:13}},"54":{start:{line:153,column:16},end:{line:153,column:55}},"55":{start:{line:154,column:16},end:{line:156,column:17}},"56":{start:{line:155,column:20},end:{line:155,column:60}},"57":{start:{line:157,column:31},end:{line:157,column:70}},"58":{start:{line:160,column:16},end:{line:168,column:17}},"59":{start:{line:161,column:37},end:{line:161,column:87}},"60":{start:{line:163,column:20},end:{line:167,column:21}},"61":{start:{line:164,column:24},end:{line:166,column:26}},"62":{start:{line:165,column:52},end:{line:165,column:77}},"63":{start:{line:170,column:16},end:{line:170,column:28}},"64":{start:{line:172,column:16},end:{line:172,column:26}},"65":{start:{line:174,column:16},end:{line:176,column:17}},"66":{start:{line:175,column:20},end:{line:175,column:41}},"67":{start:{line:197,column:29},end:{line:197,column:38}},"68":{start:{line:199,column:8},end:{line:207,column:9}},"69":{start:{line:200,column:12},end:{line:206,column:13}},"70":{start:{line:201,column:16},end:{line:201,column:67}},"71":{start:{line:203,column:16},end:{line:205,column:18}},"72":{start:{line:209,column:8},end:{line:237,column:30}},"73":{start:{line:211,column:12},end:{line:236,column:13}},"74":{start:{line:212,column:16},end:{line:217,column:17}},"75":{start:{line:213,column:39},end:{line:213,column:73}},"76":{start:{line:214,column:20},end:{line:216,column:21}},"77":{start:{line:215,column:24},end:{line:215,column:42}},"78":{start:{line:219,column:16},end:{line:219,column:55}},"79":{start:{line:220,column:16},end:{line:222,column:17}},"80":{start:{line:221,column:20},end:{line:221,column:60}},"81":{start:{line:223,column:31},end:{line:223,column:70}},"82":{start:{line:225,column:16},end:{line:227,column:17}},"83":{start:{line:226,column:20},end:{line:226,column:61}},"84":{start:{line:229,column:16},end:{line:229,column:28}},"85":{start:{line:231,column:16},end:{line:231,column:26}},"86":{start:{line:233,column:16},end:{line:235,column:17}},"87":{start:{line:234,column:20},end:{line:234,column:41}},"88":{start:{line:255,column:8},end:{line:305,column:30}},"89":{start:{line:257,column:12},end:{line:304,column:13}},"90":{start:{line:259,column:16},end:{line:261,column:17}},"91":{start:{line:260,column:20},end:{line:260,column:72}},"92":{start:{line:263,column:16},end:{line:268,column:17}},"93":{start:{line:264,column:39},end:{line:264,column:68}},"94":{start:{line:265,column:20},end:{line:267,column:21}},"95":{start:{line:266,column:24},end:{line:266,column:42}},"96":{start:{line:270,column:16},end:{line:270,column:55}},"97":{start:{line:271,column:16},end:{line:273,column:17}},"98":{start:{line:272,column:20},end:{line:272,column:60}},"99":{start:{line:276,column:30},end:{line:276,column:69}},"100":{start:{line:277,column:31},end:{line:277,column:45}},"101":{start:{line:280,column:27},end:{line:280,column:42}},"102":{start:{line:281,column:33},end:{line:281,column:70}},"103":{start:{line:284,column:27},end:{line:284,column:75}},"104":{start:{line:287,column:27},end:{line:291,column:13}},"105":{start:{line:293,column:16},end:{line:295,column:17}},"106":{start:{line:294,column:20},end:{line:294,column:58}},"107":{start:{line:297,column:16},end:{line:297,column:30}},"108":{start:{line:299,column:16},end:{line:299,column:26}},"109":{start:{line:301,column:16},end:{line:303,column:17}},"110":{start:{line:302,column:20},end:{line:302,column:41}},"111":{start:{line:319,column:77},end:{line:319,column:84}},"112":{start:{line:321,column:8},end:{line:323,column:9}},"113":{start:{line:322,column:12},end:{line:322,column:50}},"114":{start:{line:325,column:8},end:{line:368,column:30}},"115":{start:{line:327,column:12},end:{line:367,column:13}},"116":{start:{line:328,column:16},end:{line:328,column:55}},"117":{start:{line:329,column:16},end:{line:331,column:17}},"118":{start:{line:330,column:20},end:{line:330,column:60}},"119":{start:{line:333,column:32},end:{line:333,column:55}},"120":{start:{line:334,column:36},end:{line:334,column:37}},"121":{start:{line:335,column:29},end:{line:335,column:30}},"122":{start:{line:338,column:16},end:{line:354,column:17}},"123":{start:{line:338,column:29},end:{line:338,column:30}},"124":{start:{line:339,column:34},end:{line:339,column:65}},"125":{start:{line:340,column:35},end:{line:342,column:21}},"126":{start:{line:341,column:24},end:{line:341,column:55}},"127":{start:{line:341,column:43},end:{line:341,column:54}},"128":{start:{line:344,column:41},end:{line:346,column:31}},"129":{start:{line:345,column:24},end:{line:345,column:63}},"130":{start:{line:345,column:46},end:{line:345,column:49}},"131":{start:{line:348,column:32},end:{line:348,column:100}},"132":{start:{line:349,column:39},end:{line:349,column:52}},"133":{start:{line:351,column:37},end:{line:351,column:76}},"134":{start:{line:352,column:20},end:{line:352,column:57}},"135":{start:{line:353,column:20},end:{line:353,column:29}},"136":{start:{line:356,column:16},end:{line:358,column:17}},"137":{start:{line:357,column:20},end:{line:357,column:59}},"138":{start:{line:360,column:16},end:{line:360,column:63}},"139":{start:{line:362,column:16},end:{line:362,column:26}},"140":{start:{line:364,column:16},end:{line:366,column:17}},"141":{start:{line:365,column:20},end:{line:365,column:41}},"142":{start:{line:383,column:53},end:{line:383,column:60}},"143":{start:{line:384,column:8},end:{line:412,column:39}},"144":{start:{line:386,column:12},end:{line:411,column:13}},"145":{start:{line:387,column:16},end:{line:392,column:17}},"146":{start:{line:388,column:39},end:{line:388,column:68}},"147":{start:{line:389,column:20},end:{line:391,column:21}},"148":{start:{line:390,column:24},end:{line:390,column:42}},"149":{start:{line:394,column:16},end:{line:394,column:55}},"150":{start:{line:395,column:16},end:{line:397,column:17}},"151":{start:{line:396,column:20},end:{line:396,column:60}},"152":{start:{line:398,column:31},end:{line:398,column:70}},"153":{start:{line:400,column:16},end:{line:402,column:17}},"154":{start:{line:401,column:20},end:{line:401,column:56}},"155":{start:{line:404,column:16},end:{line:404,column:28}},"156":{start:{line:406,column:16},end:{line:406,column:26}},"157":{start:{line:408,column:16},end:{line:410,column:17}},"158":{start:{line:409,column:20},end:{line:409,column:41}},"159":{start:{line:422,column:8},end:{line:422,column:30}},"160":{start:{line:423,column:8},end:{line:423,column:66}},"161":{start:{line:424,column:8},end:{line:424,column:24}},"162":{start:{line:425,column:8},end:{line:425,column:44}},"163":{start:{line:434,column:8},end:{line:439,column:10}}},fnMap:{"0":{name:"validateConfiguration",decl:{start:{line:15,column:9},end:{line:15,column:30}},loc:{start:{line:15,column:33},end:{line:72,column:1}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:63,column:26},end:{line:63,column:27}},loc:{start:{line:63,column:33},end:{line:63,column:45}},line:63},"2":{name:"executeWithRetry",decl:{start:{line:100,column:15},end:{line:100,column:31}},loc:{start:{line:100,column:96},end:{line:132,column:1}},line:100},"3":{name:"(anonymous_3)",decl:{start:{line:110,column:32},end:{line:110,column:33}},loc:{start:{line:111,column:24},end:{line:111,column:94}},line:111},"4":{name:"(anonymous_4)",decl:{start:{line:111,column:35},end:{line:111,column:36}},loc:{start:{line:111,column:41},end:{line:111,column:84}},line:111},"5":{name:"(anonymous_5)",decl:{start:{line:126,column:34},end:{line:126,column:35}},loc:{start:{line:126,column:45},end:{line:126,column:88}},line:126},"6":{name:"(anonymous_6)",decl:{start:{line:149,column:4},end:{line:149,column:5}},loc:{start:{line:149,column:78},end:{line:179,column:5}},line:149},"7":{name:"(anonymous_7)",decl:{start:{line:150,column:32},end:{line:150,column:33}},loc:{start:{line:150,column:46},end:{line:178,column:9}},line:150},"8":{name:"(anonymous_8)",decl:{start:{line:165,column:41},end:{line:165,column:42}},loc:{start:{line:165,column:52},end:{line:165,column:77}},line:165},"9":{name:"(anonymous_9)",decl:{start:{line:195,column:4},end:{line:195,column:5}},loc:{start:{line:195,column:76},end:{line:238,column:5}},line:195},"10":{name:"(anonymous_10)",decl:{start:{line:209,column:32},end:{line:209,column:33}},loc:{start:{line:209,column:46},end:{line:237,column:9}},line:209},"11":{name:"(anonymous_11)",decl:{start:{line:254,column:4},end:{line:254,column:5}},loc:{start:{line:254,column:100},end:{line:306,column:5}},line:254},"12":{name:"(anonymous_12)",decl:{start:{line:255,column:32},end:{line:255,column:33}},loc:{start:{line:255,column:46},end:{line:305,column:9}},line:255},"13":{name:"(anonymous_13)",decl:{start:{line:318,column:4},end:{line:318,column:5}},loc:{start:{line:318,column:51},end:{line:369,column:5}},line:318},"14":{name:"(anonymous_14)",decl:{start:{line:325,column:32},end:{line:325,column:33}},loc:{start:{line:325,column:46},end:{line:368,column:9}},line:325},"15":{name:"(anonymous_15)",decl:{start:{line:340,column:45},end:{line:340,column:46}},loc:{start:{line:341,column:24},end:{line:341,column:55}},line:341},"16":{name:"(anonymous_16)",decl:{start:{line:341,column:36},end:{line:341,column:37}},loc:{start:{line:341,column:43},end:{line:341,column:54}},line:341},"17":{name:"(anonymous_17)",decl:{start:{line:344,column:51},end:{line:344,column:52}},loc:{start:{line:345,column:24},end:{line:345,column:63}},line:345},"18":{name:"(anonymous_18)",decl:{start:{line:345,column:40},end:{line:345,column:41}},loc:{start:{line:345,column:46},end:{line:345,column:49}},line:345},"19":{name:"(anonymous_19)",decl:{start:{line:382,column:4},end:{line:382,column:5}},loc:{start:{line:382,column:77},end:{line:413,column:5}},line:382},"20":{name:"(anonymous_20)",decl:{start:{line:384,column:32},end:{line:384,column:33}},loc:{start:{line:384,column:46},end:{line:412,column:9}},line:384},"21":{name:"(anonymous_21)",decl:{start:{line:421,column:4},end:{line:421,column:5}},loc:{start:{line:421,column:29},end:{line:426,column:5}},line:421},"22":{name:"(anonymous_22)",decl:{start:{line:433,column:4},end:{line:433,column:5}},loc:{start:{line:433,column:19},end:{line:440,column:5}},line:433}},branchMap:{"0":{loc:{start:{line:19,column:4},end:{line:21,column:5}},type:"if",locations:[{start:{line:19,column:4},end:{line:21,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:19},"1":{loc:{start:{line:23,column:4},end:{line:25,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:25,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:23},"2":{loc:{start:{line:27,column:4},end:{line:29,column:5}},type:"if",locations:[{start:{line:27,column:4},end:{line:29,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:27},"3":{loc:{start:{line:32,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:32,column:4},end:{line:34,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:32},"4":{loc:{start:{line:32,column:8},end:{line:32,column:51}},type:"binary-expr",locations:[{start:{line:32,column:8},end:{line:32,column:19}},{start:{line:32,column:23},end:{line:32,column:51}}],line:32},"5":{loc:{start:{line:36,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:36,column:4},end:{line:38,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:36},"6":{loc:{start:{line:36,column:8},end:{line:36,column:75}},type:"binary-expr",locations:[{start:{line:36,column:8},end:{line:36,column:31}},{start:{line:36,column:35},end:{line:36,column:75}}],line:36},"7":{loc:{start:{line:40,column:4},end:{line:42,column:5}},type:"if",locations:[{start:{line:40,column:4},end:{line:42,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:40},"8":{loc:{start:{line:40,column:8},end:{line:40,column:65}},type:"binary-expr",locations:[{start:{line:40,column:8},end:{line:40,column:26}},{start:{line:40,column:30},end:{line:40,column:65}}],line:40},"9":{loc:{start:{line:44,column:4},end:{line:46,column:5}},type:"if",locations:[{start:{line:44,column:4},end:{line:46,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:44},"10":{loc:{start:{line:44,column:8},end:{line:44,column:73}},type:"binary-expr",locations:[{start:{line:44,column:8},end:{line:44,column:30}},{start:{line:44,column:34},end:{line:44,column:73}}],line:44},"11":{loc:{start:{line:49,column:4},end:{line:57,column:5}},type:"if",locations:[{start:{line:49,column:4},end:{line:57,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:49},"12":{loc:{start:{line:50,column:8},end:{line:52,column:9}},type:"if",locations:[{start:{line:50,column:8},end:{line:52,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:50},"13":{loc:{start:{line:54,column:8},end:{line:56,column:9}},type:"if",locations:[{start:{line:54,column:8},end:{line:56,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:54},"14":{loc:{start:{line:54,column:12},end:{line:54,column:61}},type:"binary-expr",locations:[{start:{line:54,column:12},end:{line:54,column:26}},{start:{line:54,column:30},end:{line:54,column:61}}],line:54},"15":{loc:{start:{line:59,column:4},end:{line:71,column:5}},type:"if",locations:[{start:{line:59,column:4},end:{line:71,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:59},"16":{loc:{start:{line:81,column:14},end:{line:81,column:35}},type:"binary-expr",locations:[{start:{line:81,column:14},end:{line:81,column:29}},{start:{line:81,column:33},end:{line:81,column:35}}],line:81},"17":{loc:{start:{line:83,column:21},end:{line:83,column:60}},type:"binary-expr",locations:[{start:{line:83,column:21},end:{line:83,column:54}},{start:{line:83,column:58},end:{line:83,column:60}}],line:83},"18":{loc:{start:{line:84,column:16},end:{line:84,column:49}},type:"binary-expr",locations:[{start:{line:84,column:16},end:{line:84,column:44}},{start:{line:84,column:48},end:{line:84,column:49}}],line:84},"19":{loc:{start:{line:85,column:20},end:{line:85,column:61}},type:"binary-expr",locations:[{start:{line:85,column:20},end:{line:85,column:52}},{start:{line:85,column:56},end:{line:85,column:61}}],line:85},"20":{loc:{start:{line:86,column:24},end:{line:86,column:70}},type:"binary-expr",locations:[{start:{line:86,column:24},end:{line:86,column:61}},{start:{line:86,column:65},end:{line:86,column:70}}],line:86},"21":{loc:{start:{line:87,column:10},end:{line:87,column:39}},type:"binary-expr",locations:[{start:{line:87,column:10},end:{line:87,column:31}},{start:{line:87,column:35},end:{line:87,column:39}}],line:87},"22":{loc:{start:{line:88,column:14},end:{line:88,column:38}},type:"binary-expr",locations:[{start:{line:88,column:14},end:{line:88,column:26}},{start:{line:88,column:30},end:{line:88,column:38}}],line:88},"23":{loc:{start:{line:100,column:36},end:{line:100,column:47}},type:"default-arg",locations:[{start:{line:100,column:46},end:{line:100,column:47}}],line:100},"24":{loc:{start:{line:100,column:49},end:{line:100,column:61}},type:"default-arg",locations:[{start:{line:100,column:57},end:{line:100,column:61}}],line:100},"25":{loc:{start:{line:100,column:63},end:{line:100,column:78}},type:"default-arg",locations:[{start:{line:100,column:74},end:{line:100,column:78}}],line:100},"26":{loc:{start:{line:100,column:80},end:{line:100,column:94}},type:"default-arg",locations:[{start:{line:100,column:90},end:{line:100,column:94}}],line:100},"27":{loc:{start:{line:103,column:12},end:{line:105,column:13}},type:"if",locations:[{start:{line:103,column:12},end:{line:105,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:103},"28":{loc:{start:{line:107,column:12},end:{line:114,column:13}},type:"if",locations:[{start:{line:107,column:12},end:{line:114,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:107},"29":{loc:{start:{line:118,column:12},end:{line:118,column:47}},type:"if",locations:[{start:{line:118,column:12},end:{line:118,column:47}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:118},"30":{loc:{start:{line:121,column:12},end:{line:129,column:13}},type:"if",locations:[{start:{line:121,column:12},end:{line:129,column:13}},{start:{line:127,column:19},end:{line:129,column:13}}],line:121},"31":{loc:{start:{line:121,column:16},end:{line:125,column:51}},type:"binary-expr",locations:[{start:{line:121,column:16},end:{line:121,column:45}},{start:{line:122,column:16},end:{line:122,column:42}},{start:{line:123,column:16},end:{line:123,column:42}},{start:{line:124,column:16},end:{line:124,column:57}},{start:{line:125,column:16},end:{line:125,column:51}}],line:121},"32":{loc:{start:{line:149,column:38},end:{line:149,column:59}},type:"default-arg",locations:[{start:{line:149,column:55},end:{line:149,column:59}}],line:149},"33":{loc:{start:{line:149,column:61},end:{line:149,column:76}},type:"default-arg",locations:[{start:{line:149,column:72},end:{line:149,column:76}}],line:149},"34":{loc:{start:{line:154,column:16},end:{line:156,column:17}},type:"if",locations:[{start:{line:154,column:16},end:{line:156,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:154},"35":{loc:{start:{line:160,column:16},end:{line:168,column:17}},type:"if",locations:[{start:{line:160,column:16},end:{line:168,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:160},"36":{loc:{start:{line:163,column:20},end:{line:167,column:21}},type:"if",locations:[{start:{line:163,column:20},end:{line:167,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:163},"37":{loc:{start:{line:174,column:16},end:{line:176,column:17}},type:"if",locations:[{start:{line:174,column:16},end:{line:176,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:174},"38":{loc:{start:{line:195,column:41},end:{line:195,column:57}},type:"default-arg",locations:[{start:{line:195,column:53},end:{line:195,column:57}}],line:195},"39":{loc:{start:{line:195,column:59},end:{line:195,column:74}},type:"default-arg",locations:[{start:{line:195,column:70},end:{line:195,column:74}}],line:195},"40":{loc:{start:{line:199,column:8},end:{line:207,column:9}},type:"if",locations:[{start:{line:199,column:8},end:{line:207,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:199},"41":{loc:{start:{line:200,column:12},end:{line:206,column:13}},type:"if",locations:[{start:{line:200,column:12},end:{line:206,column:13}},{start:{line:202,column:19},end:{line:206,column:13}}],line:200},"42":{loc:{start:{line:212,column:16},end:{line:217,column:17}},type:"if",locations:[{start:{line:212,column:16},end:{line:217,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:212},"43":{loc:{start:{line:214,column:20},end:{line:216,column:21}},type:"if",locations:[{start:{line:214,column:20},end:{line:216,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:214},"44":{loc:{start:{line:220,column:16},end:{line:222,column:17}},type:"if",locations:[{start:{line:220,column:16},end:{line:222,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:220},"45":{loc:{start:{line:225,column:16},end:{line:227,column:17}},type:"if",locations:[{start:{line:225,column:16},end:{line:227,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:225},"46":{loc:{start:{line:233,column:16},end:{line:235,column:17}},type:"if",locations:[{start:{line:233,column:16},end:{line:235,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:233},"47":{loc:{start:{line:254,column:68},end:{line:254,column:81}},type:"default-arg",locations:[{start:{line:254,column:79},end:{line:254,column:81}}],line:254},"48":{loc:{start:{line:254,column:83},end:{line:254,column:98}},type:"default-arg",locations:[{start:{line:254,column:94},end:{line:254,column:98}}],line:254},"49":{loc:{start:{line:259,column:16},end:{line:261,column:17}},type:"if",locations:[{start:{line:259,column:16},end:{line:261,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:259},"50":{loc:{start:{line:263,column:16},end:{line:268,column:17}},type:"if",locations:[{start:{line:263,column:16},end:{line:268,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:263},"51":{loc:{start:{line:265,column:20},end:{line:267,column:21}},type:"if",locations:[{start:{line:265,column:20},end:{line:267,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:265},"52":{loc:{start:{line:265,column:24},end:{line:265,column:107}},type:"binary-expr",locations:[{start:{line:265,column:24},end:{line:265,column:54}},{start:{line:265,column:58},end:{line:265,column:84}},{start:{line:265,column:88},end:{line:265,column:107}}],line:265},"53":{loc:{start:{line:271,column:16},end:{line:273,column:17}},type:"if",locations:[{start:{line:271,column:16},end:{line:273,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:271},"54":{loc:{start:{line:293,column:16},end:{line:295,column:17}},type:"if",locations:[{start:{line:293,column:16},end:{line:295,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:293},"55":{loc:{start:{line:301,column:16},end:{line:303,column:17}},type:"if",locations:[{start:{line:301,column:16},end:{line:303,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:301},"56":{loc:{start:{line:318,column:37},end:{line:318,column:49}},type:"default-arg",locations:[{start:{line:318,column:47},end:{line:318,column:49}}],line:318},"57":{loc:{start:{line:319,column:16},end:{line:319,column:31}},type:"default-arg",locations:[{start:{line:319,column:27},end:{line:319,column:31}}],line:319},"58":{loc:{start:{line:319,column:33},end:{line:319,column:49}},type:"default-arg",locations:[{start:{line:319,column:45},end:{line:319,column:49}}],line:319},"59":{loc:{start:{line:319,column:51},end:{line:319,column:72}},type:"default-arg",locations:[{start:{line:319,column:68},end:{line:319,column:72}}],line:319},"60":{loc:{start:{line:321,column:8},end:{line:323,column:9}},type:"if",locations:[{start:{line:321,column:8},end:{line:323,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:321},"61":{loc:{start:{line:321,column:12},end:{line:321,column:44}},type:"binary-expr",locations:[{start:{line:321,column:12},end:{line:321,column:20}},{start:{line:321,column:24},end:{line:321,column:44}}],line:321},"62":{loc:{start:{line:329,column:16},end:{line:331,column:17}},type:"if",locations:[{start:{line:329,column:16},end:{line:331,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:329},"63":{loc:{start:{line:356,column:16},end:{line:358,column:17}},type:"if",locations:[{start:{line:356,column:16},end:{line:358,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:356},"64":{loc:{start:{line:356,column:20},end:{line:356,column:51}},type:"binary-expr",locations:[{start:{line:356,column:20},end:{line:356,column:34}},{start:{line:356,column:38},end:{line:356,column:51}}],line:356},"65":{loc:{start:{line:364,column:16},end:{line:366,column:17}},type:"if",locations:[{start:{line:364,column:16},end:{line:366,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:364},"66":{loc:{start:{line:382,column:63},end:{line:382,column:75}},type:"default-arg",locations:[{start:{line:382,column:73},end:{line:382,column:75}}],line:382},"67":{loc:{start:{line:383,column:16},end:{line:383,column:31}},type:"default-arg",locations:[{start:{line:383,column:26},end:{line:383,column:31}}],line:383},"68":{loc:{start:{line:383,column:33},end:{line:383,column:48}},type:"default-arg",locations:[{start:{line:383,column:44},end:{line:383,column:48}}],line:383},"69":{loc:{start:{line:387,column:16},end:{line:392,column:17}},type:"if",locations:[{start:{line:387,column:16},end:{line:392,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:387},"70":{loc:{start:{line:389,column:20},end:{line:391,column:21}},type:"if",locations:[{start:{line:389,column:20},end:{line:391,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:389},"71":{loc:{start:{line:395,column:16},end:{line:397,column:17}},type:"if",locations:[{start:{line:395,column:16},end:{line:397,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:395},"72":{loc:{start:{line:400,column:16},end:{line:402,column:17}},type:"if",locations:[{start:{line:400,column:16},end:{line:402,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:400},"73":{loc:{start:{line:408,column:16},end:{line:410,column:17}},type:"if",locations:[{start:{line:408,column:16},end:{line:410,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:408}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0],"24":[0],"25":[0],"26":[0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0,0],"32":[0],"33":[0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0],"39":[0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0],"48":[0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0],"57":[0],"58":[0],"59":[0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0],"67":[0],"68":[0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"fe2938aea70ca032f5b4f59d948620ce5fcf2b41"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1azmom8sei=function(){return actualCoverage;};}return actualCoverage;}cov_1azmom8sei();const db=(cov_1azmom8sei().s[0]++,require('mysql2/promise'));const{getArrayItem,addArrayItem,delPrefixKeyItem}=(cov_1azmom8sei().s[1]++,require('./redis.Connector'));const{generateCacheKey,isAutoKeyEnabled}=(cov_1azmom8sei().s[2]++,require('./core/autoKey'));const{determineInvalidationPatterns}=(cov_1azmom8sei().s[3]++,require('./core/autoInvalidate'));cov_1azmom8sei().s[4]++;require('dotenv').config();const env=(cov_1azmom8sei().s[5]++,process.env);// Check if Redis is enabled (default: true)
const REDIS_ENABLED=(cov_1azmom8sei().s[6]++,env.REDIS_ENABLED!=='false');/**
 * Validates required environment variables and provides helpful error messages
 * @throws {Error} If any required configuration is missing
 */function validateConfiguration(){cov_1azmom8sei().f[0]++;const errors=(cov_1azmom8sei().s[7]++,[]);// Required configurations
cov_1azmom8sei().s[8]++;if(!env.DB_HOST){cov_1azmom8sei().b[0][0]++;cov_1azmom8sei().s[9]++;errors.push('DB_HOST is required (e.g., DB_HOST=localhost)');}else{cov_1azmom8sei().b[0][1]++;}cov_1azmom8sei().s[10]++;if(!env.DB_USERNAME){cov_1azmom8sei().b[1][0]++;cov_1azmom8sei().s[11]++;errors.push('DB_USERNAME is required (e.g., DB_USERNAME=root)');}else{cov_1azmom8sei().b[1][1]++;}cov_1azmom8sei().s[12]++;if(!env.DB_NAME){cov_1azmom8sei().b[2][0]++;cov_1azmom8sei().s[13]++;errors.push('DB_NAME is required (e.g., DB_NAME=my_database)');}else{cov_1azmom8sei().b[2][1]++;}// Validate optional numeric values if provided
cov_1azmom8sei().s[14]++;if((cov_1azmom8sei().b[4][0]++,env.DB_PORT)&&(cov_1azmom8sei().b[4][1]++,isNaN(parseInt(env.DB_PORT)))){cov_1azmom8sei().b[3][0]++;cov_1azmom8sei().s[15]++;errors.push('DB_PORT must be a valid number (e.g., DB_PORT=3306)');}else{cov_1azmom8sei().b[3][1]++;}cov_1azmom8sei().s[16]++;if((cov_1azmom8sei().b[6][0]++,env.DB_CONNECTION_LIMIT)&&(cov_1azmom8sei().b[6][1]++,isNaN(parseInt(env.DB_CONNECTION_LIMIT)))){cov_1azmom8sei().b[5][0]++;cov_1azmom8sei().s[17]++;errors.push('DB_CONNECTION_LIMIT must be a valid number (e.g., DB_CONNECTION_LIMIT=10)');}else{cov_1azmom8sei().b[5][1]++;}cov_1azmom8sei().s[18]++;if((cov_1azmom8sei().b[8][0]++,env.DB_QUEUE_LIMIT)&&(cov_1azmom8sei().b[8][1]++,isNaN(parseInt(env.DB_QUEUE_LIMIT)))){cov_1azmom8sei().b[7][0]++;cov_1azmom8sei().s[19]++;errors.push('DB_QUEUE_LIMIT must be a valid number (e.g., DB_QUEUE_LIMIT=0)');}else{cov_1azmom8sei().b[7][1]++;}cov_1azmom8sei().s[20]++;if((cov_1azmom8sei().b[10][0]++,env.DB_CONNECT_TIMEOUT)&&(cov_1azmom8sei().b[10][1]++,isNaN(parseInt(env.DB_CONNECT_TIMEOUT)))){cov_1azmom8sei().b[9][0]++;cov_1azmom8sei().s[21]++;errors.push('DB_CONNECT_TIMEOUT must be a valid number in milliseconds (e.g., DB_CONNECT_TIMEOUT=10000)');}else{cov_1azmom8sei().b[9][1]++;}// Validate Redis configuration if enabled
cov_1azmom8sei().s[22]++;if(REDIS_ENABLED){cov_1azmom8sei().b[11][0]++;cov_1azmom8sei().s[23]++;if(!env.REDIS_SERVER){cov_1azmom8sei().b[12][0]++;cov_1azmom8sei().s[24]++;errors.push('REDIS_SERVER is required when Redis is enabled (e.g., REDIS_SERVER=localhost). Set REDIS_ENABLED=false to disable Redis.');}else{cov_1azmom8sei().b[12][1]++;}cov_1azmom8sei().s[25]++;if((cov_1azmom8sei().b[14][0]++,env.REDIS_PORT)&&(cov_1azmom8sei().b[14][1]++,isNaN(parseInt(env.REDIS_PORT)))){cov_1azmom8sei().b[13][0]++;cov_1azmom8sei().s[26]++;errors.push('REDIS_PORT must be a valid number (e.g., REDIS_PORT=6379)');}else{cov_1azmom8sei().b[13][1]++;}}else{cov_1azmom8sei().b[11][1]++;}cov_1azmom8sei().s[27]++;if(errors.length>0){cov_1azmom8sei().b[15][0]++;const errorMessage=(cov_1azmom8sei().s[28]++,['❌ Configuration Error - Missing or invalid environment variables:','',...errors.map(err=>{cov_1azmom8sei().f[1]++;cov_1azmom8sei().s[29]++;return`  • ${err}`;}),'','💡 Tip: Copy .env.example to .env and configure your settings:','  cp .env.example .env',''].join('\n'));cov_1azmom8sei().s[30]++;throw new Error(errorMessage);}else{cov_1azmom8sei().b[15][1]++;}}// Validate configuration on module load
cov_1azmom8sei().s[31]++;validateConfiguration();// Connection pool configuration with auto-reconnection
const poolConfig=(cov_1azmom8sei().s[32]++,{host:env.DB_HOST,user:env.DB_USERNAME,password:(cov_1azmom8sei().b[16][0]++,env.DB_PASSWORD)||(cov_1azmom8sei().b[16][1]++,''),database:env.DB_NAME,connectionLimit:(cov_1azmom8sei().b[17][0]++,parseInt(env.DB_CONNECTION_LIMIT))||(cov_1azmom8sei().b[17][1]++,10),queueLimit:(cov_1azmom8sei().b[18][0]++,parseInt(env.DB_QUEUE_LIMIT))||(cov_1azmom8sei().b[18][1]++,0),connectTimeout:(cov_1azmom8sei().b[19][0]++,parseInt(env.DB_CONNECT_TIMEOUT))||(cov_1azmom8sei().b[19][1]++,10000),multipleStatements:(cov_1azmom8sei().b[20][0]++,env.DB_MULTIPLE_STATEMENTS==='true')||(cov_1azmom8sei().b[20][1]++,false),port:(cov_1azmom8sei().b[21][0]++,parseInt(env.DB_PORT))||(cov_1azmom8sei().b[21][1]++,3306),timezone:(cov_1azmom8sei().b[22][0]++,env.TIMEZONE)||(cov_1azmom8sei().b[22][1]++,'+00:00'),waitForConnections:true,enableKeepAlive:true,keepAliveInitialDelay:0});const con=(cov_1azmom8sei().s[33]++,db.createPool(poolConfig));// Graceful shutdown flag
let isShuttingDown=(cov_1azmom8sei().s[34]++,false);// Retry helper function with optional database switching and timeout protection
async function executeWithRetry(fn,retries=(cov_1azmom8sei().b[23][0]++,3),delay=(cov_1azmom8sei().b[24][0]++,1000),database=(cov_1azmom8sei().b[25][0]++,null),timeout=(cov_1azmom8sei().b[26][0]++,null)){cov_1azmom8sei().f[2]++;cov_1azmom8sei().s[35]++;for(let i=(cov_1azmom8sei().s[36]++,0);i<retries;i++){cov_1azmom8sei().s[37]++;try{cov_1azmom8sei().s[38]++;if(isShuttingDown){cov_1azmom8sei().b[27][0]++;cov_1azmom8sei().s[39]++;throw new Error('Server is shutting down, cannot process new queries');}else{cov_1azmom8sei().b[27][1]++;}cov_1azmom8sei().s[40]++;if(timeout){cov_1azmom8sei().b[28][0]++;cov_1azmom8sei().s[41]++;return await Promise.race([fn(database),new Promise((_,reject)=>{cov_1azmom8sei().f[3]++;cov_1azmom8sei().s[42]++;return setTimeout(()=>{cov_1azmom8sei().f[4]++;cov_1azmom8sei().s[43]++;return reject(new Error('Query timeout exceeded'));},timeout);})]);}else{cov_1azmom8sei().b[28][1]++;}cov_1azmom8sei().s[44]++;return await fn(database);}catch(error){cov_1azmom8sei().s[45]++;if(i===retries-1){cov_1azmom8sei().b[29][0]++;cov_1azmom8sei().s[46]++;throw error;}else{cov_1azmom8sei().b[29][1]++;}// Retry only on connection errors
cov_1azmom8sei().s[47]++;if((cov_1azmom8sei().b[31][0]++,error.code==='ECONNREFUSED')||(cov_1azmom8sei().b[31][1]++,error.code==='ETIMEDOUT')||(cov_1azmom8sei().b[31][2]++,error.code==='ENOTFOUND')||(cov_1azmom8sei().b[31][3]++,error.code==='PROTOCOL_CONNECTION_LOST')||(cov_1azmom8sei().b[31][4]++,error.code==='ER_CON_COUNT_ERROR')){cov_1azmom8sei().b[30][0]++;cov_1azmom8sei().s[48]++;await new Promise(resolve=>{cov_1azmom8sei().f[5]++;cov_1azmom8sei().s[49]++;return setTimeout(resolve,delay*Math.pow(2,i));});}else{cov_1azmom8sei().b[30][1]++;cov_1azmom8sei().s[50]++;throw error;}}}}cov_1azmom8sei().s[51]++;module.exports={/**
     * Executes a SQL query and returns the result from the cache or the database.
     * If a resetCacheName is provided, it deletes the cache item before executing the query.
     *
     * v2.6.0: resetCacheName is now optional. If not provided and CORE_AUTO_INVALIDATION=true,
     * cache will be auto-invalidated based on the affected table.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string|null} resetCacheName - The name of the cache item to reset (optional).
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<any>} - A promise that resolves with the result of the query.
     * @throws {Error} - If an error occurs during the query execution.
     */async QuaryCache(sql,parameters,resetCacheName=(cov_1azmom8sei().b[32][0]++,null),database=(cov_1azmom8sei().b[33][0]++,null)){cov_1azmom8sei().f[6]++;cov_1azmom8sei().s[52]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[7]++;let connection;cov_1azmom8sei().s[53]++;try{cov_1azmom8sei().s[54]++;connection=await con.getConnection();cov_1azmom8sei().s[55]++;if(db){cov_1azmom8sei().b[34][0]++;cov_1azmom8sei().s[56]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[34][1]++;}const[data]=(cov_1azmom8sei().s[57]++,await connection.query(sql,parameters));// Determine which cache patterns to invalidate
cov_1azmom8sei().s[58]++;if(REDIS_ENABLED){cov_1azmom8sei().b[35][0]++;const patterns=(cov_1azmom8sei().s[59]++,determineInvalidationPatterns(sql,resetCacheName));cov_1azmom8sei().s[60]++;if(patterns.length>0){cov_1azmom8sei().b[36][0]++;cov_1azmom8sei().s[61]++;await Promise.all(patterns.map(pattern=>{cov_1azmom8sei().f[8]++;cov_1azmom8sei().s[62]++;return delPrefixKeyItem(pattern);}));}else{cov_1azmom8sei().b[36][1]++;}}else{cov_1azmom8sei().b[35][1]++;}cov_1azmom8sei().s[63]++;return data;}catch(err){cov_1azmom8sei().s[64]++;throw err;}finally{cov_1azmom8sei().s[65]++;if(connection){cov_1azmom8sei().b[37][0]++;cov_1azmom8sei().s[66]++;connection.release();}else{cov_1azmom8sei().b[37][1]++;}}},3,1000,database);},/**
     * Retrieves data from cache or database based on the provided SQL query and parameters.
     * If the data is found in the cache, it is returned. Otherwise, the data is fetched from the database,
     * stored in the cache, and then returned.
     *
     * v2.6.0: cacheName is now optional. If not provided and CORE_AUTO_FEATURES=true,
     * a cache key will be auto-generated from the SQL query and parameters.
     *
     * @param {string} sql - The SQL query to be executed.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string|null} cacheName - The name of the cache to store the data (optional if auto-key enabled).
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<Array>} - A promise that resolves to the retrieved data.
     * @throws {Error} - If there is an error while retrieving the data.
     */async getCacheQuery(sql,parameters,cacheName=(cov_1azmom8sei().b[38][0]++,null),database=(cov_1azmom8sei().b[39][0]++,null)){cov_1azmom8sei().f[9]++;// Auto-generate cache key if not provided and feature is enabled
let finalCacheName=(cov_1azmom8sei().s[67]++,cacheName);cov_1azmom8sei().s[68]++;if(!finalCacheName){cov_1azmom8sei().b[40][0]++;cov_1azmom8sei().s[69]++;if(isAutoKeyEnabled()){cov_1azmom8sei().b[41][0]++;cov_1azmom8sei().s[70]++;finalCacheName=generateCacheKey(sql,parameters);}else{cov_1azmom8sei().b[41][1]++;cov_1azmom8sei().s[71]++;throw new Error('cacheName is required. To enable auto key generation, set CORE_AUTO_FEATURES=true in .env');}}else{cov_1azmom8sei().b[40][1]++;}cov_1azmom8sei().s[72]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[10]++;let connection;cov_1azmom8sei().s[73]++;try{cov_1azmom8sei().s[74]++;if(REDIS_ENABLED){cov_1azmom8sei().b[42][0]++;const cachedData=(cov_1azmom8sei().s[75]++,await getArrayItem(finalCacheName));cov_1azmom8sei().s[76]++;if(cachedData.length>0){cov_1azmom8sei().b[43][0]++;cov_1azmom8sei().s[77]++;return cachedData;}else{cov_1azmom8sei().b[43][1]++;}}else{cov_1azmom8sei().b[42][1]++;}cov_1azmom8sei().s[78]++;connection=await con.getConnection();cov_1azmom8sei().s[79]++;if(db){cov_1azmom8sei().b[44][0]++;cov_1azmom8sei().s[80]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[44][1]++;}const[data]=(cov_1azmom8sei().s[81]++,await connection.query(sql,parameters));cov_1azmom8sei().s[82]++;if(REDIS_ENABLED){cov_1azmom8sei().b[45][0]++;cov_1azmom8sei().s[83]++;await addArrayItem(finalCacheName,data);}else{cov_1azmom8sei().b[45][1]++;}cov_1azmom8sei().s[84]++;return data;}catch(err){cov_1azmom8sei().s[85]++;throw err;}finally{cov_1azmom8sei().s[86]++;if(connection){cov_1azmom8sei().b[46][0]++;cov_1azmom8sei().s[87]++;connection.release();}else{cov_1azmom8sei().b[46][1]++;}}},3,1000,database);},/**
     * Retrieves paginated data from cache or database based on the provided SQL query and parameters.
     * If the data is available in cache, it is returned directly. Otherwise, the data is fetched from the database,
     * paginated, and then stored in the cache for future use.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be used in the SQL query.
     * @param {string} cacheName - The name of the cache to store the data.
     * @param {number} page - The page number of the data to retrieve.
     * @param {number} [pageSize=30] - The number of records per page. Defaults to 30 if not provided.
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<Object>} - A promise that resolves to an object containing the paginated data.
     * @throws {Error} - If an error occurs during the execution of the function.
     */async getCacheQueryPagination(sql,parameters,cacheName,page,pageSize=(cov_1azmom8sei().b[47][0]++,30),database=(cov_1azmom8sei().b[48][0]++,null)){cov_1azmom8sei().f[11]++;cov_1azmom8sei().s[88]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[12]++;let connection;cov_1azmom8sei().s[89]++;try{cov_1azmom8sei().s[90]++;// Validate pageSize to prevent division by zero
if(pageSize<=0){cov_1azmom8sei().b[49][0]++;cov_1azmom8sei().s[91]++;throw new Error('Page size must be greater than 0');}else{cov_1azmom8sei().b[49][1]++;}cov_1azmom8sei().s[92]++;if(REDIS_ENABLED){cov_1azmom8sei().b[50][0]++;const cachedData=(cov_1azmom8sei().s[93]++,await getArrayItem(cacheName));cov_1azmom8sei().s[94]++;if((cov_1azmom8sei().b[52][0]++,typeof cachedData==='object')&&(cov_1azmom8sei().b[52][1]++,!Array.isArray(cachedData))&&(cov_1azmom8sei().b[52][2]++,cachedData!==null)){cov_1azmom8sei().b[51][0]++;cov_1azmom8sei().s[95]++;return cachedData;}else{cov_1azmom8sei().b[51][1]++;}}else{cov_1azmom8sei().b[50][1]++;}cov_1azmom8sei().s[96]++;connection=await con.getConnection();cov_1azmom8sei().s[97]++;if(db){cov_1azmom8sei().b[53][0]++;cov_1azmom8sei().s[98]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[53][1]++;}// Get total count with original query
const[allData]=(cov_1azmom8sei().s[99]++,await connection.query(sql,parameters));const totalCount=(cov_1azmom8sei().s[100]++,allData.length);// Modify SQL for pagination
const offset=(cov_1azmom8sei().s[101]++,page*pageSize);const paginatedSql=(cov_1azmom8sei().s[102]++,`${sql} LIMIT ${offset}, ${pageSize}`);// Get paginated data
const[data]=(cov_1azmom8sei().s[103]++,await connection.query(paginatedSql,parameters));// Prepare result
const result=(cov_1azmom8sei().s[104]++,{totalCount,pageCount:Math.ceil(totalCount/pageSize),detail:data});cov_1azmom8sei().s[105]++;if(REDIS_ENABLED){cov_1azmom8sei().b[54][0]++;cov_1azmom8sei().s[106]++;await addArrayItem(cacheName,result);}else{cov_1azmom8sei().b[54][1]++;}cov_1azmom8sei().s[107]++;return result;}catch(err){cov_1azmom8sei().s[108]++;throw err;}finally{cov_1azmom8sei().s[109]++;if(connection){cov_1azmom8sei().b[55][0]++;cov_1azmom8sei().s[110]++;connection.release();}else{cov_1azmom8sei().b[55][1]++;}}},3,1000,database);},/**
     * Executes a bulk insert operation with chunking for large datasets.
     * Automatically splits large datasets into chunks to prevent memory issues.
     *
     * @param {string} table - The table name to insert into.
     * @param {Array} records - Array of objects with column-value pairs.
     * @param {Object} options - Optional settings: { database, chunkSize, resetCacheName }
     * @returns {Promise<Object>} - A promise that resolves with insert statistics.
     * @throws {Error} - If an error occurs during the bulk insert.
     */async bulkInsert(table,records,options=(cov_1azmom8sei().b[56][0]++,{})){cov_1azmom8sei().f[13]++;const{database=(cov_1azmom8sei().b[57][0]++,null),chunkSize=(cov_1azmom8sei().b[58][0]++,1000),resetCacheName=(cov_1azmom8sei().b[59][0]++,null)}=(cov_1azmom8sei().s[111]++,options);cov_1azmom8sei().s[112]++;if((cov_1azmom8sei().b[61][0]++,!records)||(cov_1azmom8sei().b[61][1]++,records.length===0)){cov_1azmom8sei().b[60][0]++;cov_1azmom8sei().s[113]++;return{insertedRows:0,chunks:0};}else{cov_1azmom8sei().b[60][1]++;}cov_1azmom8sei().s[114]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[14]++;let connection;cov_1azmom8sei().s[115]++;try{cov_1azmom8sei().s[116]++;connection=await con.getConnection();cov_1azmom8sei().s[117]++;if(db){cov_1azmom8sei().b[62][0]++;cov_1azmom8sei().s[118]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[62][1]++;}const columns=(cov_1azmom8sei().s[119]++,Object.keys(records[0]));let totalInserted=(cov_1azmom8sei().s[120]++,0);let chunks=(cov_1azmom8sei().s[121]++,0);// Process in chunks
cov_1azmom8sei().s[122]++;for(let i=(cov_1azmom8sei().s[123]++,0);i<records.length;i+=chunkSize){const chunk=(cov_1azmom8sei().s[124]++,records.slice(i,i+chunkSize));const values=(cov_1azmom8sei().s[125]++,chunk.map(record=>{cov_1azmom8sei().f[15]++;cov_1azmom8sei().s[126]++;return columns.map(col=>{cov_1azmom8sei().f[16]++;cov_1azmom8sei().s[127]++;return record[col];});}));const placeholders=(cov_1azmom8sei().s[128]++,chunk.map(()=>{cov_1azmom8sei().f[17]++;cov_1azmom8sei().s[129]++;return`(${columns.map(()=>{cov_1azmom8sei().f[18]++;cov_1azmom8sei().s[130]++;return'?';}).join(',')})`;}).join(','));const sql=(cov_1azmom8sei().s[131]++,`INSERT INTO ${table} (${columns.join(',')}) VALUES ${placeholders}`);const flatValues=(cov_1azmom8sei().s[132]++,values.flat());const[result]=(cov_1azmom8sei().s[133]++,await connection.query(sql,flatValues));cov_1azmom8sei().s[134]++;totalInserted+=result.affectedRows;cov_1azmom8sei().s[135]++;chunks++;}cov_1azmom8sei().s[136]++;if((cov_1azmom8sei().b[64][0]++,resetCacheName)&&(cov_1azmom8sei().b[64][1]++,REDIS_ENABLED)){cov_1azmom8sei().b[63][0]++;cov_1azmom8sei().s[137]++;await delPrefixKeyItem(resetCacheName);}else{cov_1azmom8sei().b[63][1]++;}cov_1azmom8sei().s[138]++;return{insertedRows:totalInserted,chunks};}catch(err){cov_1azmom8sei().s[139]++;throw err;}finally{cov_1azmom8sei().s[140]++;if(connection){cov_1azmom8sei().b[65][0]++;cov_1azmom8sei().s[141]++;connection.release();}else{cov_1azmom8sei().b[65][1]++;}}},3,1000,database);},/**
     * Executes a query with timeout protection.
     * Prevents long-running queries from blocking the application.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string} cacheName - The name of the cache.
     * @param {Object} options - Optional settings: { timeout, database }
     * @returns {Promise<any>} - A promise that resolves with the result of the query.
     * @throws {Error} - If timeout is exceeded or query fails.
     */async getCacheQueryWithTimeout(sql,parameters,cacheName,options=(cov_1azmom8sei().b[66][0]++,{})){cov_1azmom8sei().f[19]++;const{timeout=(cov_1azmom8sei().b[67][0]++,30000),database=(cov_1azmom8sei().b[68][0]++,null)}=(cov_1azmom8sei().s[142]++,options);cov_1azmom8sei().s[143]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[20]++;let connection;cov_1azmom8sei().s[144]++;try{cov_1azmom8sei().s[145]++;if(REDIS_ENABLED){cov_1azmom8sei().b[69][0]++;const cachedData=(cov_1azmom8sei().s[146]++,await getArrayItem(cacheName));cov_1azmom8sei().s[147]++;if(cachedData.length>0){cov_1azmom8sei().b[70][0]++;cov_1azmom8sei().s[148]++;return cachedData;}else{cov_1azmom8sei().b[70][1]++;}}else{cov_1azmom8sei().b[69][1]++;}cov_1azmom8sei().s[149]++;connection=await con.getConnection();cov_1azmom8sei().s[150]++;if(db){cov_1azmom8sei().b[71][0]++;cov_1azmom8sei().s[151]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[71][1]++;}const[data]=(cov_1azmom8sei().s[152]++,await connection.query(sql,parameters));cov_1azmom8sei().s[153]++;if(REDIS_ENABLED){cov_1azmom8sei().b[72][0]++;cov_1azmom8sei().s[154]++;await addArrayItem(cacheName,data);}else{cov_1azmom8sei().b[72][1]++;}cov_1azmom8sei().s[155]++;return data;}catch(err){cov_1azmom8sei().s[156]++;throw err;}finally{cov_1azmom8sei().s[157]++;if(connection){cov_1azmom8sei().b[73][0]++;cov_1azmom8sei().s[158]++;connection.release();}else{cov_1azmom8sei().b[73][1]++;}}},3,1000,database,timeout);},/**
     * Gracefully closes all database connections.
     * Should be called during application shutdown to prevent connection leaks.
     *
     * @returns {Promise<void>}
     */async closeConnections(){cov_1azmom8sei().f[21]++;cov_1azmom8sei().s[159]++;isShuttingDown=true;cov_1azmom8sei().s[160]++;console.log('Closing database connections gracefully...');cov_1azmom8sei().s[161]++;await con.end();cov_1azmom8sei().s[162]++;console.log('Database pool closed');},/**
     * Gets current pool statistics for monitoring.
     *
     * @returns {Object} - Pool statistics including active connections.
     */getPoolStats(){cov_1azmom8sei().f[22]++;cov_1azmom8sei().s[163]++;return{totalConnections:con.pool._allConnections.length,activeConnections:con.pool._allConnections.length-con.pool._freeConnections.length,freeConnections:con.pool._freeConnections.length,queuedRequests:con.pool._connectionQueue.length};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,