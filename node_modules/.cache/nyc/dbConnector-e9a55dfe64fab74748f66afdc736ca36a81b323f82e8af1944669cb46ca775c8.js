function cov_1azmom8sei(){var path="/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/dbConnector.js";var hash="789b0bc0ed6c4779fe992e0e1bdcd798c4564173";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/dbConnector.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:36}},"1":{start:{line:2,column:57},end:{line:2,column:85}},"2":{start:{line:3,column:0},end:{line:3,column:27}},"3":{start:{line:4,column:12},end:{line:4,column:23}},"4":{start:{line:7,column:22},end:{line:7,column:51}},"5":{start:{line:14,column:19},end:{line:14,column:21}},"6":{start:{line:17,column:4},end:{line:19,column:5}},"7":{start:{line:18,column:8},end:{line:18,column:69}},"8":{start:{line:21,column:4},end:{line:23,column:5}},"9":{start:{line:22,column:8},end:{line:22,column:72}},"10":{start:{line:25,column:4},end:{line:27,column:5}},"11":{start:{line:26,column:8},end:{line:26,column:71}},"12":{start:{line:30,column:4},end:{line:32,column:5}},"13":{start:{line:31,column:8},end:{line:31,column:75}},"14":{start:{line:34,column:4},end:{line:36,column:5}},"15":{start:{line:35,column:8},end:{line:35,column:97}},"16":{start:{line:38,column:4},end:{line:40,column:5}},"17":{start:{line:39,column:8},end:{line:39,column:86}},"18":{start:{line:42,column:4},end:{line:44,column:5}},"19":{start:{line:43,column:8},end:{line:43,column:114}},"20":{start:{line:47,column:4},end:{line:55,column:5}},"21":{start:{line:48,column:8},end:{line:50,column:9}},"22":{start:{line:49,column:12},end:{line:49,column:148}},"23":{start:{line:52,column:8},end:{line:54,column:9}},"24":{start:{line:53,column:12},end:{line:53,column:85}},"25":{start:{line:57,column:4},end:{line:69,column:5}},"26":{start:{line:58,column:29},end:{line:66,column:20}},"27":{start:{line:61,column:33},end:{line:61,column:45}},"28":{start:{line:68,column:8},end:{line:68,column:38}},"29":{start:{line:73,column:0},end:{line:73,column:24}},"30":{start:{line:76,column:19},end:{line:90,column:1}},"31":{start:{line:92,column:12},end:{line:92,column:37}},"32":{start:{line:95,column:21},end:{line:95,column:26}},"33":{start:{line:99,column:4},end:{line:129,column:5}},"34":{start:{line:99,column:17},end:{line:99,column:18}},"35":{start:{line:100,column:8},end:{line:128,column:9}},"36":{start:{line:101,column:12},end:{line:103,column:13}},"37":{start:{line:102,column:16},end:{line:102,column:87}},"38":{start:{line:105,column:12},end:{line:112,column:13}},"39":{start:{line:106,column:16},end:{line:111,column:19}},"40":{start:{line:109,column:24},end:{line:109,column:94}},"41":{start:{line:109,column:41},end:{line:109,column:84}},"42":{start:{line:114,column:12},end:{line:114,column:38}},"43":{start:{line:116,column:12},end:{line:116,column:47}},"44":{start:{line:116,column:35},end:{line:116,column:47}},"45":{start:{line:119,column:12},end:{line:127,column:13}},"46":{start:{line:124,column:16},end:{line:124,column:90}},"47":{start:{line:124,column:45},end:{line:124,column:88}},"48":{start:{line:126,column:16},end:{line:126,column:28}},"49":{start:{line:132,column:0},end:{line:411,column:2}},"50":{start:{line:145,column:8},end:{line:164,column:30}},"51":{start:{line:147,column:12},end:{line:163,column:13}},"52":{start:{line:148,column:16},end:{line:148,column:55}},"53":{start:{line:149,column:16},end:{line:151,column:17}},"54":{start:{line:150,column:20},end:{line:150,column:60}},"55":{start:{line:152,column:31},end:{line:152,column:70}},"56":{start:{line:153,column:16},end:{line:155,column:17}},"57":{start:{line:154,column:20},end:{line:154,column:59}},"58":{start:{line:156,column:16},end:{line:156,column:28}},"59":{start:{line:158,column:16},end:{line:158,column:26}},"60":{start:{line:160,column:16},end:{line:162,column:17}},"61":{start:{line:161,column:20},end:{line:161,column:41}},"62":{start:{line:179,column:8},end:{line:207,column:30}},"63":{start:{line:181,column:12},end:{line:206,column:13}},"64":{start:{line:182,column:16},end:{line:187,column:17}},"65":{start:{line:183,column:39},end:{line:183,column:68}},"66":{start:{line:184,column:20},end:{line:186,column:21}},"67":{start:{line:185,column:24},end:{line:185,column:42}},"68":{start:{line:189,column:16},end:{line:189,column:55}},"69":{start:{line:190,column:16},end:{line:192,column:17}},"70":{start:{line:191,column:20},end:{line:191,column:60}},"71":{start:{line:193,column:31},end:{line:193,column:70}},"72":{start:{line:195,column:16},end:{line:197,column:17}},"73":{start:{line:196,column:20},end:{line:196,column:56}},"74":{start:{line:199,column:16},end:{line:199,column:28}},"75":{start:{line:201,column:16},end:{line:201,column:26}},"76":{start:{line:203,column:16},end:{line:205,column:17}},"77":{start:{line:204,column:20},end:{line:204,column:41}},"78":{start:{line:225,column:8},end:{line:275,column:30}},"79":{start:{line:227,column:12},end:{line:274,column:13}},"80":{start:{line:229,column:16},end:{line:231,column:17}},"81":{start:{line:230,column:20},end:{line:230,column:72}},"82":{start:{line:233,column:16},end:{line:238,column:17}},"83":{start:{line:234,column:39},end:{line:234,column:68}},"84":{start:{line:235,column:20},end:{line:237,column:21}},"85":{start:{line:236,column:24},end:{line:236,column:42}},"86":{start:{line:240,column:16},end:{line:240,column:55}},"87":{start:{line:241,column:16},end:{line:243,column:17}},"88":{start:{line:242,column:20},end:{line:242,column:60}},"89":{start:{line:246,column:30},end:{line:246,column:69}},"90":{start:{line:247,column:31},end:{line:247,column:45}},"91":{start:{line:250,column:27},end:{line:250,column:42}},"92":{start:{line:251,column:33},end:{line:251,column:70}},"93":{start:{line:254,column:27},end:{line:254,column:75}},"94":{start:{line:257,column:27},end:{line:261,column:13}},"95":{start:{line:263,column:16},end:{line:265,column:17}},"96":{start:{line:264,column:20},end:{line:264,column:58}},"97":{start:{line:267,column:16},end:{line:267,column:30}},"98":{start:{line:269,column:16},end:{line:269,column:26}},"99":{start:{line:271,column:16},end:{line:273,column:17}},"100":{start:{line:272,column:20},end:{line:272,column:41}},"101":{start:{line:289,column:77},end:{line:289,column:84}},"102":{start:{line:291,column:8},end:{line:293,column:9}},"103":{start:{line:292,column:12},end:{line:292,column:50}},"104":{start:{line:295,column:8},end:{line:338,column:30}},"105":{start:{line:297,column:12},end:{line:337,column:13}},"106":{start:{line:298,column:16},end:{line:298,column:55}},"107":{start:{line:299,column:16},end:{line:301,column:17}},"108":{start:{line:300,column:20},end:{line:300,column:60}},"109":{start:{line:303,column:32},end:{line:303,column:55}},"110":{start:{line:304,column:36},end:{line:304,column:37}},"111":{start:{line:305,column:29},end:{line:305,column:30}},"112":{start:{line:308,column:16},end:{line:324,column:17}},"113":{start:{line:308,column:29},end:{line:308,column:30}},"114":{start:{line:309,column:34},end:{line:309,column:65}},"115":{start:{line:310,column:35},end:{line:312,column:21}},"116":{start:{line:311,column:24},end:{line:311,column:55}},"117":{start:{line:311,column:43},end:{line:311,column:54}},"118":{start:{line:314,column:41},end:{line:316,column:31}},"119":{start:{line:315,column:24},end:{line:315,column:63}},"120":{start:{line:315,column:46},end:{line:315,column:49}},"121":{start:{line:318,column:32},end:{line:318,column:100}},"122":{start:{line:319,column:39},end:{line:319,column:52}},"123":{start:{line:321,column:37},end:{line:321,column:76}},"124":{start:{line:322,column:20},end:{line:322,column:57}},"125":{start:{line:323,column:20},end:{line:323,column:29}},"126":{start:{line:326,column:16},end:{line:328,column:17}},"127":{start:{line:327,column:20},end:{line:327,column:59}},"128":{start:{line:330,column:16},end:{line:330,column:63}},"129":{start:{line:332,column:16},end:{line:332,column:26}},"130":{start:{line:334,column:16},end:{line:336,column:17}},"131":{start:{line:335,column:20},end:{line:335,column:41}},"132":{start:{line:353,column:53},end:{line:353,column:60}},"133":{start:{line:354,column:8},end:{line:382,column:39}},"134":{start:{line:356,column:12},end:{line:381,column:13}},"135":{start:{line:357,column:16},end:{line:362,column:17}},"136":{start:{line:358,column:39},end:{line:358,column:68}},"137":{start:{line:359,column:20},end:{line:361,column:21}},"138":{start:{line:360,column:24},end:{line:360,column:42}},"139":{start:{line:364,column:16},end:{line:364,column:55}},"140":{start:{line:365,column:16},end:{line:367,column:17}},"141":{start:{line:366,column:20},end:{line:366,column:60}},"142":{start:{line:368,column:31},end:{line:368,column:70}},"143":{start:{line:370,column:16},end:{line:372,column:17}},"144":{start:{line:371,column:20},end:{line:371,column:56}},"145":{start:{line:374,column:16},end:{line:374,column:28}},"146":{start:{line:376,column:16},end:{line:376,column:26}},"147":{start:{line:378,column:16},end:{line:380,column:17}},"148":{start:{line:379,column:20},end:{line:379,column:41}},"149":{start:{line:392,column:8},end:{line:392,column:30}},"150":{start:{line:393,column:8},end:{line:393,column:66}},"151":{start:{line:394,column:8},end:{line:394,column:24}},"152":{start:{line:395,column:8},end:{line:395,column:44}},"153":{start:{line:404,column:8},end:{line:409,column:10}}},fnMap:{"0":{name:"validateConfiguration",decl:{start:{line:13,column:9},end:{line:13,column:30}},loc:{start:{line:13,column:33},end:{line:70,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:61,column:26},end:{line:61,column:27}},loc:{start:{line:61,column:33},end:{line:61,column:45}},line:61},"2":{name:"executeWithRetry",decl:{start:{line:98,column:15},end:{line:98,column:31}},loc:{start:{line:98,column:96},end:{line:130,column:1}},line:98},"3":{name:"(anonymous_3)",decl:{start:{line:108,column:32},end:{line:108,column:33}},loc:{start:{line:109,column:24},end:{line:109,column:94}},line:109},"4":{name:"(anonymous_4)",decl:{start:{line:109,column:35},end:{line:109,column:36}},loc:{start:{line:109,column:41},end:{line:109,column:84}},line:109},"5":{name:"(anonymous_5)",decl:{start:{line:124,column:34},end:{line:124,column:35}},loc:{start:{line:124,column:45},end:{line:124,column:88}},line:124},"6":{name:"(anonymous_6)",decl:{start:{line:144,column:4},end:{line:144,column:5}},loc:{start:{line:144,column:78},end:{line:165,column:5}},line:144},"7":{name:"(anonymous_7)",decl:{start:{line:145,column:32},end:{line:145,column:33}},loc:{start:{line:145,column:46},end:{line:164,column:9}},line:145},"8":{name:"(anonymous_8)",decl:{start:{line:178,column:4},end:{line:178,column:5}},loc:{start:{line:178,column:69},end:{line:208,column:5}},line:178},"9":{name:"(anonymous_9)",decl:{start:{line:179,column:32},end:{line:179,column:33}},loc:{start:{line:179,column:46},end:{line:207,column:9}},line:179},"10":{name:"(anonymous_10)",decl:{start:{line:224,column:4},end:{line:224,column:5}},loc:{start:{line:224,column:100},end:{line:276,column:5}},line:224},"11":{name:"(anonymous_11)",decl:{start:{line:225,column:32},end:{line:225,column:33}},loc:{start:{line:225,column:46},end:{line:275,column:9}},line:225},"12":{name:"(anonymous_12)",decl:{start:{line:288,column:4},end:{line:288,column:5}},loc:{start:{line:288,column:51},end:{line:339,column:5}},line:288},"13":{name:"(anonymous_13)",decl:{start:{line:295,column:32},end:{line:295,column:33}},loc:{start:{line:295,column:46},end:{line:338,column:9}},line:295},"14":{name:"(anonymous_14)",decl:{start:{line:310,column:45},end:{line:310,column:46}},loc:{start:{line:311,column:24},end:{line:311,column:55}},line:311},"15":{name:"(anonymous_15)",decl:{start:{line:311,column:36},end:{line:311,column:37}},loc:{start:{line:311,column:43},end:{line:311,column:54}},line:311},"16":{name:"(anonymous_16)",decl:{start:{line:314,column:51},end:{line:314,column:52}},loc:{start:{line:315,column:24},end:{line:315,column:63}},line:315},"17":{name:"(anonymous_17)",decl:{start:{line:315,column:40},end:{line:315,column:41}},loc:{start:{line:315,column:46},end:{line:315,column:49}},line:315},"18":{name:"(anonymous_18)",decl:{start:{line:352,column:4},end:{line:352,column:5}},loc:{start:{line:352,column:77},end:{line:383,column:5}},line:352},"19":{name:"(anonymous_19)",decl:{start:{line:354,column:32},end:{line:354,column:33}},loc:{start:{line:354,column:46},end:{line:382,column:9}},line:354},"20":{name:"(anonymous_20)",decl:{start:{line:391,column:4},end:{line:391,column:5}},loc:{start:{line:391,column:29},end:{line:396,column:5}},line:391},"21":{name:"(anonymous_21)",decl:{start:{line:403,column:4},end:{line:403,column:5}},loc:{start:{line:403,column:19},end:{line:410,column:5}},line:403}},branchMap:{"0":{loc:{start:{line:17,column:4},end:{line:19,column:5}},type:"if",locations:[{start:{line:17,column:4},end:{line:19,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:17},"1":{loc:{start:{line:21,column:4},end:{line:23,column:5}},type:"if",locations:[{start:{line:21,column:4},end:{line:23,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:21},"2":{loc:{start:{line:25,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:25,column:4},end:{line:27,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:25},"3":{loc:{start:{line:30,column:4},end:{line:32,column:5}},type:"if",locations:[{start:{line:30,column:4},end:{line:32,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:30},"4":{loc:{start:{line:30,column:8},end:{line:30,column:51}},type:"binary-expr",locations:[{start:{line:30,column:8},end:{line:30,column:19}},{start:{line:30,column:23},end:{line:30,column:51}}],line:30},"5":{loc:{start:{line:34,column:4},end:{line:36,column:5}},type:"if",locations:[{start:{line:34,column:4},end:{line:36,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:34},"6":{loc:{start:{line:34,column:8},end:{line:34,column:75}},type:"binary-expr",locations:[{start:{line:34,column:8},end:{line:34,column:31}},{start:{line:34,column:35},end:{line:34,column:75}}],line:34},"7":{loc:{start:{line:38,column:4},end:{line:40,column:5}},type:"if",locations:[{start:{line:38,column:4},end:{line:40,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:38},"8":{loc:{start:{line:38,column:8},end:{line:38,column:65}},type:"binary-expr",locations:[{start:{line:38,column:8},end:{line:38,column:26}},{start:{line:38,column:30},end:{line:38,column:65}}],line:38},"9":{loc:{start:{line:42,column:4},end:{line:44,column:5}},type:"if",locations:[{start:{line:42,column:4},end:{line:44,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:42},"10":{loc:{start:{line:42,column:8},end:{line:42,column:73}},type:"binary-expr",locations:[{start:{line:42,column:8},end:{line:42,column:30}},{start:{line:42,column:34},end:{line:42,column:73}}],line:42},"11":{loc:{start:{line:47,column:4},end:{line:55,column:5}},type:"if",locations:[{start:{line:47,column:4},end:{line:55,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:47},"12":{loc:{start:{line:48,column:8},end:{line:50,column:9}},type:"if",locations:[{start:{line:48,column:8},end:{line:50,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:48},"13":{loc:{start:{line:52,column:8},end:{line:54,column:9}},type:"if",locations:[{start:{line:52,column:8},end:{line:54,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:52},"14":{loc:{start:{line:52,column:12},end:{line:52,column:61}},type:"binary-expr",locations:[{start:{line:52,column:12},end:{line:52,column:26}},{start:{line:52,column:30},end:{line:52,column:61}}],line:52},"15":{loc:{start:{line:57,column:4},end:{line:69,column:5}},type:"if",locations:[{start:{line:57,column:4},end:{line:69,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:57},"16":{loc:{start:{line:79,column:14},end:{line:79,column:35}},type:"binary-expr",locations:[{start:{line:79,column:14},end:{line:79,column:29}},{start:{line:79,column:33},end:{line:79,column:35}}],line:79},"17":{loc:{start:{line:81,column:21},end:{line:81,column:60}},type:"binary-expr",locations:[{start:{line:81,column:21},end:{line:81,column:54}},{start:{line:81,column:58},end:{line:81,column:60}}],line:81},"18":{loc:{start:{line:82,column:16},end:{line:82,column:49}},type:"binary-expr",locations:[{start:{line:82,column:16},end:{line:82,column:44}},{start:{line:82,column:48},end:{line:82,column:49}}],line:82},"19":{loc:{start:{line:83,column:20},end:{line:83,column:61}},type:"binary-expr",locations:[{start:{line:83,column:20},end:{line:83,column:52}},{start:{line:83,column:56},end:{line:83,column:61}}],line:83},"20":{loc:{start:{line:84,column:24},end:{line:84,column:70}},type:"binary-expr",locations:[{start:{line:84,column:24},end:{line:84,column:61}},{start:{line:84,column:65},end:{line:84,column:70}}],line:84},"21":{loc:{start:{line:85,column:10},end:{line:85,column:39}},type:"binary-expr",locations:[{start:{line:85,column:10},end:{line:85,column:31}},{start:{line:85,column:35},end:{line:85,column:39}}],line:85},"22":{loc:{start:{line:86,column:14},end:{line:86,column:38}},type:"binary-expr",locations:[{start:{line:86,column:14},end:{line:86,column:26}},{start:{line:86,column:30},end:{line:86,column:38}}],line:86},"23":{loc:{start:{line:98,column:36},end:{line:98,column:47}},type:"default-arg",locations:[{start:{line:98,column:46},end:{line:98,column:47}}],line:98},"24":{loc:{start:{line:98,column:49},end:{line:98,column:61}},type:"default-arg",locations:[{start:{line:98,column:57},end:{line:98,column:61}}],line:98},"25":{loc:{start:{line:98,column:63},end:{line:98,column:78}},type:"default-arg",locations:[{start:{line:98,column:74},end:{line:98,column:78}}],line:98},"26":{loc:{start:{line:98,column:80},end:{line:98,column:94}},type:"default-arg",locations:[{start:{line:98,column:90},end:{line:98,column:94}}],line:98},"27":{loc:{start:{line:101,column:12},end:{line:103,column:13}},type:"if",locations:[{start:{line:101,column:12},end:{line:103,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:101},"28":{loc:{start:{line:105,column:12},end:{line:112,column:13}},type:"if",locations:[{start:{line:105,column:12},end:{line:112,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:105},"29":{loc:{start:{line:116,column:12},end:{line:116,column:47}},type:"if",locations:[{start:{line:116,column:12},end:{line:116,column:47}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:116},"30":{loc:{start:{line:119,column:12},end:{line:127,column:13}},type:"if",locations:[{start:{line:119,column:12},end:{line:127,column:13}},{start:{line:125,column:19},end:{line:127,column:13}}],line:119},"31":{loc:{start:{line:119,column:16},end:{line:123,column:51}},type:"binary-expr",locations:[{start:{line:119,column:16},end:{line:119,column:45}},{start:{line:120,column:16},end:{line:120,column:42}},{start:{line:121,column:16},end:{line:121,column:42}},{start:{line:122,column:16},end:{line:122,column:57}},{start:{line:123,column:16},end:{line:123,column:51}}],line:119},"32":{loc:{start:{line:144,column:38},end:{line:144,column:59}},type:"default-arg",locations:[{start:{line:144,column:55},end:{line:144,column:59}}],line:144},"33":{loc:{start:{line:144,column:61},end:{line:144,column:76}},type:"default-arg",locations:[{start:{line:144,column:72},end:{line:144,column:76}}],line:144},"34":{loc:{start:{line:149,column:16},end:{line:151,column:17}},type:"if",locations:[{start:{line:149,column:16},end:{line:151,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:149},"35":{loc:{start:{line:153,column:16},end:{line:155,column:17}},type:"if",locations:[{start:{line:153,column:16},end:{line:155,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:153},"36":{loc:{start:{line:153,column:20},end:{line:153,column:51}},type:"binary-expr",locations:[{start:{line:153,column:20},end:{line:153,column:34}},{start:{line:153,column:38},end:{line:153,column:51}}],line:153},"37":{loc:{start:{line:160,column:16},end:{line:162,column:17}},type:"if",locations:[{start:{line:160,column:16},end:{line:162,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:160},"38":{loc:{start:{line:178,column:52},end:{line:178,column:67}},type:"default-arg",locations:[{start:{line:178,column:63},end:{line:178,column:67}}],line:178},"39":{loc:{start:{line:182,column:16},end:{line:187,column:17}},type:"if",locations:[{start:{line:182,column:16},end:{line:187,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:182},"40":{loc:{start:{line:184,column:20},end:{line:186,column:21}},type:"if",locations:[{start:{line:184,column:20},end:{line:186,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:184},"41":{loc:{start:{line:190,column:16},end:{line:192,column:17}},type:"if",locations:[{start:{line:190,column:16},end:{line:192,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:190},"42":{loc:{start:{line:195,column:16},end:{line:197,column:17}},type:"if",locations:[{start:{line:195,column:16},end:{line:197,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:195},"43":{loc:{start:{line:203,column:16},end:{line:205,column:17}},type:"if",locations:[{start:{line:203,column:16},end:{line:205,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:203},"44":{loc:{start:{line:224,column:68},end:{line:224,column:81}},type:"default-arg",locations:[{start:{line:224,column:79},end:{line:224,column:81}}],line:224},"45":{loc:{start:{line:224,column:83},end:{line:224,column:98}},type:"default-arg",locations:[{start:{line:224,column:94},end:{line:224,column:98}}],line:224},"46":{loc:{start:{line:229,column:16},end:{line:231,column:17}},type:"if",locations:[{start:{line:229,column:16},end:{line:231,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:229},"47":{loc:{start:{line:233,column:16},end:{line:238,column:17}},type:"if",locations:[{start:{line:233,column:16},end:{line:238,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:233},"48":{loc:{start:{line:235,column:20},end:{line:237,column:21}},type:"if",locations:[{start:{line:235,column:20},end:{line:237,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:235},"49":{loc:{start:{line:235,column:24},end:{line:235,column:107}},type:"binary-expr",locations:[{start:{line:235,column:24},end:{line:235,column:54}},{start:{line:235,column:58},end:{line:235,column:84}},{start:{line:235,column:88},end:{line:235,column:107}}],line:235},"50":{loc:{start:{line:241,column:16},end:{line:243,column:17}},type:"if",locations:[{start:{line:241,column:16},end:{line:243,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:241},"51":{loc:{start:{line:263,column:16},end:{line:265,column:17}},type:"if",locations:[{start:{line:263,column:16},end:{line:265,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:263},"52":{loc:{start:{line:271,column:16},end:{line:273,column:17}},type:"if",locations:[{start:{line:271,column:16},end:{line:273,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:271},"53":{loc:{start:{line:288,column:37},end:{line:288,column:49}},type:"default-arg",locations:[{start:{line:288,column:47},end:{line:288,column:49}}],line:288},"54":{loc:{start:{line:289,column:16},end:{line:289,column:31}},type:"default-arg",locations:[{start:{line:289,column:27},end:{line:289,column:31}}],line:289},"55":{loc:{start:{line:289,column:33},end:{line:289,column:49}},type:"default-arg",locations:[{start:{line:289,column:45},end:{line:289,column:49}}],line:289},"56":{loc:{start:{line:289,column:51},end:{line:289,column:72}},type:"default-arg",locations:[{start:{line:289,column:68},end:{line:289,column:72}}],line:289},"57":{loc:{start:{line:291,column:8},end:{line:293,column:9}},type:"if",locations:[{start:{line:291,column:8},end:{line:293,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:291},"58":{loc:{start:{line:291,column:12},end:{line:291,column:44}},type:"binary-expr",locations:[{start:{line:291,column:12},end:{line:291,column:20}},{start:{line:291,column:24},end:{line:291,column:44}}],line:291},"59":{loc:{start:{line:299,column:16},end:{line:301,column:17}},type:"if",locations:[{start:{line:299,column:16},end:{line:301,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:299},"60":{loc:{start:{line:326,column:16},end:{line:328,column:17}},type:"if",locations:[{start:{line:326,column:16},end:{line:328,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:326},"61":{loc:{start:{line:326,column:20},end:{line:326,column:51}},type:"binary-expr",locations:[{start:{line:326,column:20},end:{line:326,column:34}},{start:{line:326,column:38},end:{line:326,column:51}}],line:326},"62":{loc:{start:{line:334,column:16},end:{line:336,column:17}},type:"if",locations:[{start:{line:334,column:16},end:{line:336,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:334},"63":{loc:{start:{line:352,column:63},end:{line:352,column:75}},type:"default-arg",locations:[{start:{line:352,column:73},end:{line:352,column:75}}],line:352},"64":{loc:{start:{line:353,column:16},end:{line:353,column:31}},type:"default-arg",locations:[{start:{line:353,column:26},end:{line:353,column:31}}],line:353},"65":{loc:{start:{line:353,column:33},end:{line:353,column:48}},type:"default-arg",locations:[{start:{line:353,column:44},end:{line:353,column:48}}],line:353},"66":{loc:{start:{line:357,column:16},end:{line:362,column:17}},type:"if",locations:[{start:{line:357,column:16},end:{line:362,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:357},"67":{loc:{start:{line:359,column:20},end:{line:361,column:21}},type:"if",locations:[{start:{line:359,column:20},end:{line:361,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:359},"68":{loc:{start:{line:365,column:16},end:{line:367,column:17}},type:"if",locations:[{start:{line:365,column:16},end:{line:367,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:365},"69":{loc:{start:{line:370,column:16},end:{line:372,column:17}},type:"if",locations:[{start:{line:370,column:16},end:{line:372,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:370},"70":{loc:{start:{line:378,column:16},end:{line:380,column:17}},type:"if",locations:[{start:{line:378,column:16},end:{line:380,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:378}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0],"24":[0],"25":[0],"26":[0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0,0],"32":[0],"33":[0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0],"45":[0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0],"54":[0],"55":[0],"56":[0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0],"64":[0],"65":[0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"789b0bc0ed6c4779fe992e0e1bdcd798c4564173"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1azmom8sei=function(){return actualCoverage;};}return actualCoverage;}cov_1azmom8sei();const db=(cov_1azmom8sei().s[0]++,require('mysql2/promise'));const{getArrayItem,addArrayItem,delPrefixKeyItem}=(cov_1azmom8sei().s[1]++,require('./redis.Connector'));cov_1azmom8sei().s[2]++;require('dotenv').config();const env=(cov_1azmom8sei().s[3]++,process.env);// Check if Redis is enabled (default: true)
const REDIS_ENABLED=(cov_1azmom8sei().s[4]++,env.REDIS_ENABLED!=='false');/**
 * Validates required environment variables and provides helpful error messages
 * @throws {Error} If any required configuration is missing
 */function validateConfiguration(){cov_1azmom8sei().f[0]++;const errors=(cov_1azmom8sei().s[5]++,[]);// Required configurations
cov_1azmom8sei().s[6]++;if(!env.DB_HOST){cov_1azmom8sei().b[0][0]++;cov_1azmom8sei().s[7]++;errors.push('DB_HOST is required (e.g., DB_HOST=localhost)');}else{cov_1azmom8sei().b[0][1]++;}cov_1azmom8sei().s[8]++;if(!env.DB_USERNAME){cov_1azmom8sei().b[1][0]++;cov_1azmom8sei().s[9]++;errors.push('DB_USERNAME is required (e.g., DB_USERNAME=root)');}else{cov_1azmom8sei().b[1][1]++;}cov_1azmom8sei().s[10]++;if(!env.DB_NAME){cov_1azmom8sei().b[2][0]++;cov_1azmom8sei().s[11]++;errors.push('DB_NAME is required (e.g., DB_NAME=my_database)');}else{cov_1azmom8sei().b[2][1]++;}// Validate optional numeric values if provided
cov_1azmom8sei().s[12]++;if((cov_1azmom8sei().b[4][0]++,env.DB_PORT)&&(cov_1azmom8sei().b[4][1]++,isNaN(parseInt(env.DB_PORT)))){cov_1azmom8sei().b[3][0]++;cov_1azmom8sei().s[13]++;errors.push('DB_PORT must be a valid number (e.g., DB_PORT=3306)');}else{cov_1azmom8sei().b[3][1]++;}cov_1azmom8sei().s[14]++;if((cov_1azmom8sei().b[6][0]++,env.DB_CONNECTION_LIMIT)&&(cov_1azmom8sei().b[6][1]++,isNaN(parseInt(env.DB_CONNECTION_LIMIT)))){cov_1azmom8sei().b[5][0]++;cov_1azmom8sei().s[15]++;errors.push('DB_CONNECTION_LIMIT must be a valid number (e.g., DB_CONNECTION_LIMIT=10)');}else{cov_1azmom8sei().b[5][1]++;}cov_1azmom8sei().s[16]++;if((cov_1azmom8sei().b[8][0]++,env.DB_QUEUE_LIMIT)&&(cov_1azmom8sei().b[8][1]++,isNaN(parseInt(env.DB_QUEUE_LIMIT)))){cov_1azmom8sei().b[7][0]++;cov_1azmom8sei().s[17]++;errors.push('DB_QUEUE_LIMIT must be a valid number (e.g., DB_QUEUE_LIMIT=0)');}else{cov_1azmom8sei().b[7][1]++;}cov_1azmom8sei().s[18]++;if((cov_1azmom8sei().b[10][0]++,env.DB_CONNECT_TIMEOUT)&&(cov_1azmom8sei().b[10][1]++,isNaN(parseInt(env.DB_CONNECT_TIMEOUT)))){cov_1azmom8sei().b[9][0]++;cov_1azmom8sei().s[19]++;errors.push('DB_CONNECT_TIMEOUT must be a valid number in milliseconds (e.g., DB_CONNECT_TIMEOUT=10000)');}else{cov_1azmom8sei().b[9][1]++;}// Validate Redis configuration if enabled
cov_1azmom8sei().s[20]++;if(REDIS_ENABLED){cov_1azmom8sei().b[11][0]++;cov_1azmom8sei().s[21]++;if(!env.REDIS_SERVER){cov_1azmom8sei().b[12][0]++;cov_1azmom8sei().s[22]++;errors.push('REDIS_SERVER is required when Redis is enabled (e.g., REDIS_SERVER=localhost). Set REDIS_ENABLED=false to disable Redis.');}else{cov_1azmom8sei().b[12][1]++;}cov_1azmom8sei().s[23]++;if((cov_1azmom8sei().b[14][0]++,env.REDIS_PORT)&&(cov_1azmom8sei().b[14][1]++,isNaN(parseInt(env.REDIS_PORT)))){cov_1azmom8sei().b[13][0]++;cov_1azmom8sei().s[24]++;errors.push('REDIS_PORT must be a valid number (e.g., REDIS_PORT=6379)');}else{cov_1azmom8sei().b[13][1]++;}}else{cov_1azmom8sei().b[11][1]++;}cov_1azmom8sei().s[25]++;if(errors.length>0){cov_1azmom8sei().b[15][0]++;const errorMessage=(cov_1azmom8sei().s[26]++,['❌ Configuration Error - Missing or invalid environment variables:','',...errors.map(err=>{cov_1azmom8sei().f[1]++;cov_1azmom8sei().s[27]++;return`  • ${err}`;}),'','💡 Tip: Copy .env.example to .env and configure your settings:','  cp .env.example .env',''].join('\n'));cov_1azmom8sei().s[28]++;throw new Error(errorMessage);}else{cov_1azmom8sei().b[15][1]++;}}// Validate configuration on module load
cov_1azmom8sei().s[29]++;validateConfiguration();// Connection pool configuration with auto-reconnection
const poolConfig=(cov_1azmom8sei().s[30]++,{host:env.DB_HOST,user:env.DB_USERNAME,password:(cov_1azmom8sei().b[16][0]++,env.DB_PASSWORD)||(cov_1azmom8sei().b[16][1]++,''),database:env.DB_NAME,connectionLimit:(cov_1azmom8sei().b[17][0]++,parseInt(env.DB_CONNECTION_LIMIT))||(cov_1azmom8sei().b[17][1]++,10),queueLimit:(cov_1azmom8sei().b[18][0]++,parseInt(env.DB_QUEUE_LIMIT))||(cov_1azmom8sei().b[18][1]++,0),connectTimeout:(cov_1azmom8sei().b[19][0]++,parseInt(env.DB_CONNECT_TIMEOUT))||(cov_1azmom8sei().b[19][1]++,10000),multipleStatements:(cov_1azmom8sei().b[20][0]++,env.DB_MULTIPLE_STATEMENTS==='true')||(cov_1azmom8sei().b[20][1]++,false),port:(cov_1azmom8sei().b[21][0]++,parseInt(env.DB_PORT))||(cov_1azmom8sei().b[21][1]++,3306),timezone:(cov_1azmom8sei().b[22][0]++,env.TIMEZONE)||(cov_1azmom8sei().b[22][1]++,'+00:00'),waitForConnections:true,enableKeepAlive:true,keepAliveInitialDelay:0});const con=(cov_1azmom8sei().s[31]++,db.createPool(poolConfig));// Graceful shutdown flag
let isShuttingDown=(cov_1azmom8sei().s[32]++,false);// Retry helper function with optional database switching and timeout protection
async function executeWithRetry(fn,retries=(cov_1azmom8sei().b[23][0]++,3),delay=(cov_1azmom8sei().b[24][0]++,1000),database=(cov_1azmom8sei().b[25][0]++,null),timeout=(cov_1azmom8sei().b[26][0]++,null)){cov_1azmom8sei().f[2]++;cov_1azmom8sei().s[33]++;for(let i=(cov_1azmom8sei().s[34]++,0);i<retries;i++){cov_1azmom8sei().s[35]++;try{cov_1azmom8sei().s[36]++;if(isShuttingDown){cov_1azmom8sei().b[27][0]++;cov_1azmom8sei().s[37]++;throw new Error('Server is shutting down, cannot process new queries');}else{cov_1azmom8sei().b[27][1]++;}cov_1azmom8sei().s[38]++;if(timeout){cov_1azmom8sei().b[28][0]++;cov_1azmom8sei().s[39]++;return await Promise.race([fn(database),new Promise((_,reject)=>{cov_1azmom8sei().f[3]++;cov_1azmom8sei().s[40]++;return setTimeout(()=>{cov_1azmom8sei().f[4]++;cov_1azmom8sei().s[41]++;return reject(new Error('Query timeout exceeded'));},timeout);})]);}else{cov_1azmom8sei().b[28][1]++;}cov_1azmom8sei().s[42]++;return await fn(database);}catch(error){cov_1azmom8sei().s[43]++;if(i===retries-1){cov_1azmom8sei().b[29][0]++;cov_1azmom8sei().s[44]++;throw error;}else{cov_1azmom8sei().b[29][1]++;}// Retry only on connection errors
cov_1azmom8sei().s[45]++;if((cov_1azmom8sei().b[31][0]++,error.code==='ECONNREFUSED')||(cov_1azmom8sei().b[31][1]++,error.code==='ETIMEDOUT')||(cov_1azmom8sei().b[31][2]++,error.code==='ENOTFOUND')||(cov_1azmom8sei().b[31][3]++,error.code==='PROTOCOL_CONNECTION_LOST')||(cov_1azmom8sei().b[31][4]++,error.code==='ER_CON_COUNT_ERROR')){cov_1azmom8sei().b[30][0]++;cov_1azmom8sei().s[46]++;await new Promise(resolve=>{cov_1azmom8sei().f[5]++;cov_1azmom8sei().s[47]++;return setTimeout(resolve,delay*Math.pow(2,i));});}else{cov_1azmom8sei().b[30][1]++;cov_1azmom8sei().s[48]++;throw error;}}}}cov_1azmom8sei().s[49]++;module.exports={/**
     * Executes a SQL query and returns the result from the cache or the database.
     * If a resetCacheName is provided, it deletes the cache item before executing the query.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string|null} resetCacheName - The name of the cache item to reset (optional).
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<any>} - A promise that resolves with the result of the query.
     * @throws {Error} - If an error occurs during the query execution.
     */async QuaryCache(sql,parameters,resetCacheName=(cov_1azmom8sei().b[32][0]++,null),database=(cov_1azmom8sei().b[33][0]++,null)){cov_1azmom8sei().f[6]++;cov_1azmom8sei().s[50]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[7]++;let connection;cov_1azmom8sei().s[51]++;try{cov_1azmom8sei().s[52]++;connection=await con.getConnection();cov_1azmom8sei().s[53]++;if(db){cov_1azmom8sei().b[34][0]++;cov_1azmom8sei().s[54]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[34][1]++;}const[data]=(cov_1azmom8sei().s[55]++,await connection.query(sql,parameters));cov_1azmom8sei().s[56]++;if((cov_1azmom8sei().b[36][0]++,resetCacheName)&&(cov_1azmom8sei().b[36][1]++,REDIS_ENABLED)){cov_1azmom8sei().b[35][0]++;cov_1azmom8sei().s[57]++;await delPrefixKeyItem(resetCacheName);}else{cov_1azmom8sei().b[35][1]++;}cov_1azmom8sei().s[58]++;return data;}catch(err){cov_1azmom8sei().s[59]++;throw err;}finally{cov_1azmom8sei().s[60]++;if(connection){cov_1azmom8sei().b[37][0]++;cov_1azmom8sei().s[61]++;connection.release();}else{cov_1azmom8sei().b[37][1]++;}}},3,1000,database);},/**
     * Retrieves data from cache or database based on the provided SQL query and parameters.
     * If the data is found in the cache, it is returned. Otherwise, the data is fetched from the database,
     * stored in the cache, and then returned.
     *
     * @param {string} sql - The SQL query to be executed.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string} cacheName - The name of the cache to store the data.
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<Array>} - A promise that resolves to the retrieved data.
     * @throws {Error} - If there is an error while retrieving the data.
     */async getCacheQuery(sql,parameters,cacheName,database=(cov_1azmom8sei().b[38][0]++,null)){cov_1azmom8sei().f[8]++;cov_1azmom8sei().s[62]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[9]++;let connection;cov_1azmom8sei().s[63]++;try{cov_1azmom8sei().s[64]++;if(REDIS_ENABLED){cov_1azmom8sei().b[39][0]++;const cachedData=(cov_1azmom8sei().s[65]++,await getArrayItem(cacheName));cov_1azmom8sei().s[66]++;if(cachedData.length>0){cov_1azmom8sei().b[40][0]++;cov_1azmom8sei().s[67]++;return cachedData;}else{cov_1azmom8sei().b[40][1]++;}}else{cov_1azmom8sei().b[39][1]++;}cov_1azmom8sei().s[68]++;connection=await con.getConnection();cov_1azmom8sei().s[69]++;if(db){cov_1azmom8sei().b[41][0]++;cov_1azmom8sei().s[70]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[41][1]++;}const[data]=(cov_1azmom8sei().s[71]++,await connection.query(sql,parameters));cov_1azmom8sei().s[72]++;if(REDIS_ENABLED){cov_1azmom8sei().b[42][0]++;cov_1azmom8sei().s[73]++;await addArrayItem(cacheName,data);}else{cov_1azmom8sei().b[42][1]++;}cov_1azmom8sei().s[74]++;return data;}catch(err){cov_1azmom8sei().s[75]++;throw err;}finally{cov_1azmom8sei().s[76]++;if(connection){cov_1azmom8sei().b[43][0]++;cov_1azmom8sei().s[77]++;connection.release();}else{cov_1azmom8sei().b[43][1]++;}}},3,1000,database);},/**
     * Retrieves paginated data from cache or database based on the provided SQL query and parameters.
     * If the data is available in cache, it is returned directly. Otherwise, the data is fetched from the database,
     * paginated, and then stored in the cache for future use.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be used in the SQL query.
     * @param {string} cacheName - The name of the cache to store the data.
     * @param {number} page - The page number of the data to retrieve.
     * @param {number} [pageSize=30] - The number of records per page. Defaults to 30 if not provided.
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<Object>} - A promise that resolves to an object containing the paginated data.
     * @throws {Error} - If an error occurs during the execution of the function.
     */async getCacheQueryPagination(sql,parameters,cacheName,page,pageSize=(cov_1azmom8sei().b[44][0]++,30),database=(cov_1azmom8sei().b[45][0]++,null)){cov_1azmom8sei().f[10]++;cov_1azmom8sei().s[78]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[11]++;let connection;cov_1azmom8sei().s[79]++;try{cov_1azmom8sei().s[80]++;// Validate pageSize to prevent division by zero
if(pageSize<=0){cov_1azmom8sei().b[46][0]++;cov_1azmom8sei().s[81]++;throw new Error('Page size must be greater than 0');}else{cov_1azmom8sei().b[46][1]++;}cov_1azmom8sei().s[82]++;if(REDIS_ENABLED){cov_1azmom8sei().b[47][0]++;const cachedData=(cov_1azmom8sei().s[83]++,await getArrayItem(cacheName));cov_1azmom8sei().s[84]++;if((cov_1azmom8sei().b[49][0]++,typeof cachedData==='object')&&(cov_1azmom8sei().b[49][1]++,!Array.isArray(cachedData))&&(cov_1azmom8sei().b[49][2]++,cachedData!==null)){cov_1azmom8sei().b[48][0]++;cov_1azmom8sei().s[85]++;return cachedData;}else{cov_1azmom8sei().b[48][1]++;}}else{cov_1azmom8sei().b[47][1]++;}cov_1azmom8sei().s[86]++;connection=await con.getConnection();cov_1azmom8sei().s[87]++;if(db){cov_1azmom8sei().b[50][0]++;cov_1azmom8sei().s[88]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[50][1]++;}// Get total count with original query
const[allData]=(cov_1azmom8sei().s[89]++,await connection.query(sql,parameters));const totalCount=(cov_1azmom8sei().s[90]++,allData.length);// Modify SQL for pagination
const offset=(cov_1azmom8sei().s[91]++,page*pageSize);const paginatedSql=(cov_1azmom8sei().s[92]++,`${sql} LIMIT ${offset}, ${pageSize}`);// Get paginated data
const[data]=(cov_1azmom8sei().s[93]++,await connection.query(paginatedSql,parameters));// Prepare result
const result=(cov_1azmom8sei().s[94]++,{totalCount,pageCount:Math.ceil(totalCount/pageSize),detail:data});cov_1azmom8sei().s[95]++;if(REDIS_ENABLED){cov_1azmom8sei().b[51][0]++;cov_1azmom8sei().s[96]++;await addArrayItem(cacheName,result);}else{cov_1azmom8sei().b[51][1]++;}cov_1azmom8sei().s[97]++;return result;}catch(err){cov_1azmom8sei().s[98]++;throw err;}finally{cov_1azmom8sei().s[99]++;if(connection){cov_1azmom8sei().b[52][0]++;cov_1azmom8sei().s[100]++;connection.release();}else{cov_1azmom8sei().b[52][1]++;}}},3,1000,database);},/**
     * Executes a bulk insert operation with chunking for large datasets.
     * Automatically splits large datasets into chunks to prevent memory issues.
     *
     * @param {string} table - The table name to insert into.
     * @param {Array} records - Array of objects with column-value pairs.
     * @param {Object} options - Optional settings: { database, chunkSize, resetCacheName }
     * @returns {Promise<Object>} - A promise that resolves with insert statistics.
     * @throws {Error} - If an error occurs during the bulk insert.
     */async bulkInsert(table,records,options=(cov_1azmom8sei().b[53][0]++,{})){cov_1azmom8sei().f[12]++;const{database=(cov_1azmom8sei().b[54][0]++,null),chunkSize=(cov_1azmom8sei().b[55][0]++,1000),resetCacheName=(cov_1azmom8sei().b[56][0]++,null)}=(cov_1azmom8sei().s[101]++,options);cov_1azmom8sei().s[102]++;if((cov_1azmom8sei().b[58][0]++,!records)||(cov_1azmom8sei().b[58][1]++,records.length===0)){cov_1azmom8sei().b[57][0]++;cov_1azmom8sei().s[103]++;return{insertedRows:0,chunks:0};}else{cov_1azmom8sei().b[57][1]++;}cov_1azmom8sei().s[104]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[13]++;let connection;cov_1azmom8sei().s[105]++;try{cov_1azmom8sei().s[106]++;connection=await con.getConnection();cov_1azmom8sei().s[107]++;if(db){cov_1azmom8sei().b[59][0]++;cov_1azmom8sei().s[108]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[59][1]++;}const columns=(cov_1azmom8sei().s[109]++,Object.keys(records[0]));let totalInserted=(cov_1azmom8sei().s[110]++,0);let chunks=(cov_1azmom8sei().s[111]++,0);// Process in chunks
cov_1azmom8sei().s[112]++;for(let i=(cov_1azmom8sei().s[113]++,0);i<records.length;i+=chunkSize){const chunk=(cov_1azmom8sei().s[114]++,records.slice(i,i+chunkSize));const values=(cov_1azmom8sei().s[115]++,chunk.map(record=>{cov_1azmom8sei().f[14]++;cov_1azmom8sei().s[116]++;return columns.map(col=>{cov_1azmom8sei().f[15]++;cov_1azmom8sei().s[117]++;return record[col];});}));const placeholders=(cov_1azmom8sei().s[118]++,chunk.map(()=>{cov_1azmom8sei().f[16]++;cov_1azmom8sei().s[119]++;return`(${columns.map(()=>{cov_1azmom8sei().f[17]++;cov_1azmom8sei().s[120]++;return'?';}).join(',')})`;}).join(','));const sql=(cov_1azmom8sei().s[121]++,`INSERT INTO ${table} (${columns.join(',')}) VALUES ${placeholders}`);const flatValues=(cov_1azmom8sei().s[122]++,values.flat());const[result]=(cov_1azmom8sei().s[123]++,await connection.query(sql,flatValues));cov_1azmom8sei().s[124]++;totalInserted+=result.affectedRows;cov_1azmom8sei().s[125]++;chunks++;}cov_1azmom8sei().s[126]++;if((cov_1azmom8sei().b[61][0]++,resetCacheName)&&(cov_1azmom8sei().b[61][1]++,REDIS_ENABLED)){cov_1azmom8sei().b[60][0]++;cov_1azmom8sei().s[127]++;await delPrefixKeyItem(resetCacheName);}else{cov_1azmom8sei().b[60][1]++;}cov_1azmom8sei().s[128]++;return{insertedRows:totalInserted,chunks};}catch(err){cov_1azmom8sei().s[129]++;throw err;}finally{cov_1azmom8sei().s[130]++;if(connection){cov_1azmom8sei().b[62][0]++;cov_1azmom8sei().s[131]++;connection.release();}else{cov_1azmom8sei().b[62][1]++;}}},3,1000,database);},/**
     * Executes a query with timeout protection.
     * Prevents long-running queries from blocking the application.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string} cacheName - The name of the cache.
     * @param {Object} options - Optional settings: { timeout, database }
     * @returns {Promise<any>} - A promise that resolves with the result of the query.
     * @throws {Error} - If timeout is exceeded or query fails.
     */async getCacheQueryWithTimeout(sql,parameters,cacheName,options=(cov_1azmom8sei().b[63][0]++,{})){cov_1azmom8sei().f[18]++;const{timeout=(cov_1azmom8sei().b[64][0]++,30000),database=(cov_1azmom8sei().b[65][0]++,null)}=(cov_1azmom8sei().s[132]++,options);cov_1azmom8sei().s[133]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[19]++;let connection;cov_1azmom8sei().s[134]++;try{cov_1azmom8sei().s[135]++;if(REDIS_ENABLED){cov_1azmom8sei().b[66][0]++;const cachedData=(cov_1azmom8sei().s[136]++,await getArrayItem(cacheName));cov_1azmom8sei().s[137]++;if(cachedData.length>0){cov_1azmom8sei().b[67][0]++;cov_1azmom8sei().s[138]++;return cachedData;}else{cov_1azmom8sei().b[67][1]++;}}else{cov_1azmom8sei().b[66][1]++;}cov_1azmom8sei().s[139]++;connection=await con.getConnection();cov_1azmom8sei().s[140]++;if(db){cov_1azmom8sei().b[68][0]++;cov_1azmom8sei().s[141]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[68][1]++;}const[data]=(cov_1azmom8sei().s[142]++,await connection.query(sql,parameters));cov_1azmom8sei().s[143]++;if(REDIS_ENABLED){cov_1azmom8sei().b[69][0]++;cov_1azmom8sei().s[144]++;await addArrayItem(cacheName,data);}else{cov_1azmom8sei().b[69][1]++;}cov_1azmom8sei().s[145]++;return data;}catch(err){cov_1azmom8sei().s[146]++;throw err;}finally{cov_1azmom8sei().s[147]++;if(connection){cov_1azmom8sei().b[70][0]++;cov_1azmom8sei().s[148]++;connection.release();}else{cov_1azmom8sei().b[70][1]++;}}},3,1000,database,timeout);},/**
     * Gracefully closes all database connections.
     * Should be called during application shutdown to prevent connection leaks.
     *
     * @returns {Promise<void>}
     */async closeConnections(){cov_1azmom8sei().f[20]++;cov_1azmom8sei().s[149]++;isShuttingDown=true;cov_1azmom8sei().s[150]++;console.log('Closing database connections gracefully...');cov_1azmom8sei().s[151]++;await con.end();cov_1azmom8sei().s[152]++;console.log('Database pool closed');},/**
     * Gets current pool statistics for monitoring.
     *
     * @returns {Object} - Pool statistics including active connections.
     */getPoolStats(){cov_1azmom8sei().f[21]++;cov_1azmom8sei().s[153]++;return{totalConnections:con.pool._allConnections.length,activeConnections:con.pool._allConnections.length-con.pool._freeConnections.length,freeConnections:con.pool._freeConnections.length,queuedRequests:con.pool._connectionQueue.length};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,