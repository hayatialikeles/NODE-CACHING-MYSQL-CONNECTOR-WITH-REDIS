function cov_1azmom8sei(){var path="/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/dbConnector.js";var hash="cd609753ba4643bc02080fc29352d7f999fc4dfc";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/dbConnector.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:36}},"1":{start:{line:2,column:57},end:{line:2,column:85}},"2":{start:{line:3,column:0},end:{line:3,column:27}},"3":{start:{line:4,column:12},end:{line:4,column:23}},"4":{start:{line:7,column:22},end:{line:7,column:51}},"5":{start:{line:10,column:0},end:{line:12,column:1}},"6":{start:{line:11,column:4},end:{line:11,column:110}},"7":{start:{line:15,column:19},end:{line:29,column:1}},"8":{start:{line:31,column:12},end:{line:31,column:37}},"9":{start:{line:34,column:21},end:{line:34,column:26}},"10":{start:{line:38,column:4},end:{line:68,column:5}},"11":{start:{line:38,column:17},end:{line:38,column:18}},"12":{start:{line:39,column:8},end:{line:67,column:9}},"13":{start:{line:40,column:12},end:{line:42,column:13}},"14":{start:{line:41,column:16},end:{line:41,column:87}},"15":{start:{line:44,column:12},end:{line:51,column:13}},"16":{start:{line:45,column:16},end:{line:50,column:19}},"17":{start:{line:48,column:24},end:{line:48,column:94}},"18":{start:{line:48,column:41},end:{line:48,column:84}},"19":{start:{line:53,column:12},end:{line:53,column:38}},"20":{start:{line:55,column:12},end:{line:55,column:47}},"21":{start:{line:55,column:35},end:{line:55,column:47}},"22":{start:{line:58,column:12},end:{line:66,column:13}},"23":{start:{line:63,column:16},end:{line:63,column:90}},"24":{start:{line:63,column:45},end:{line:63,column:88}},"25":{start:{line:65,column:16},end:{line:65,column:28}},"26":{start:{line:71,column:0},end:{line:350,column:2}},"27":{start:{line:84,column:8},end:{line:103,column:30}},"28":{start:{line:86,column:12},end:{line:102,column:13}},"29":{start:{line:87,column:16},end:{line:87,column:55}},"30":{start:{line:88,column:16},end:{line:90,column:17}},"31":{start:{line:89,column:20},end:{line:89,column:60}},"32":{start:{line:91,column:31},end:{line:91,column:70}},"33":{start:{line:92,column:16},end:{line:94,column:17}},"34":{start:{line:93,column:20},end:{line:93,column:59}},"35":{start:{line:95,column:16},end:{line:95,column:28}},"36":{start:{line:97,column:16},end:{line:97,column:26}},"37":{start:{line:99,column:16},end:{line:101,column:17}},"38":{start:{line:100,column:20},end:{line:100,column:41}},"39":{start:{line:118,column:8},end:{line:146,column:30}},"40":{start:{line:120,column:12},end:{line:145,column:13}},"41":{start:{line:121,column:16},end:{line:126,column:17}},"42":{start:{line:122,column:39},end:{line:122,column:68}},"43":{start:{line:123,column:20},end:{line:125,column:21}},"44":{start:{line:124,column:24},end:{line:124,column:42}},"45":{start:{line:128,column:16},end:{line:128,column:55}},"46":{start:{line:129,column:16},end:{line:131,column:17}},"47":{start:{line:130,column:20},end:{line:130,column:60}},"48":{start:{line:132,column:31},end:{line:132,column:70}},"49":{start:{line:134,column:16},end:{line:136,column:17}},"50":{start:{line:135,column:20},end:{line:135,column:56}},"51":{start:{line:138,column:16},end:{line:138,column:28}},"52":{start:{line:140,column:16},end:{line:140,column:26}},"53":{start:{line:142,column:16},end:{line:144,column:17}},"54":{start:{line:143,column:20},end:{line:143,column:41}},"55":{start:{line:164,column:8},end:{line:214,column:30}},"56":{start:{line:166,column:12},end:{line:213,column:13}},"57":{start:{line:168,column:16},end:{line:170,column:17}},"58":{start:{line:169,column:20},end:{line:169,column:72}},"59":{start:{line:172,column:16},end:{line:177,column:17}},"60":{start:{line:173,column:39},end:{line:173,column:68}},"61":{start:{line:174,column:20},end:{line:176,column:21}},"62":{start:{line:175,column:24},end:{line:175,column:42}},"63":{start:{line:179,column:16},end:{line:179,column:55}},"64":{start:{line:180,column:16},end:{line:182,column:17}},"65":{start:{line:181,column:20},end:{line:181,column:60}},"66":{start:{line:185,column:30},end:{line:185,column:69}},"67":{start:{line:186,column:31},end:{line:186,column:45}},"68":{start:{line:189,column:27},end:{line:189,column:42}},"69":{start:{line:190,column:33},end:{line:190,column:70}},"70":{start:{line:193,column:27},end:{line:193,column:75}},"71":{start:{line:196,column:27},end:{line:200,column:13}},"72":{start:{line:202,column:16},end:{line:204,column:17}},"73":{start:{line:203,column:20},end:{line:203,column:58}},"74":{start:{line:206,column:16},end:{line:206,column:30}},"75":{start:{line:208,column:16},end:{line:208,column:26}},"76":{start:{line:210,column:16},end:{line:212,column:17}},"77":{start:{line:211,column:20},end:{line:211,column:41}},"78":{start:{line:228,column:77},end:{line:228,column:84}},"79":{start:{line:230,column:8},end:{line:232,column:9}},"80":{start:{line:231,column:12},end:{line:231,column:50}},"81":{start:{line:234,column:8},end:{line:277,column:30}},"82":{start:{line:236,column:12},end:{line:276,column:13}},"83":{start:{line:237,column:16},end:{line:237,column:55}},"84":{start:{line:238,column:16},end:{line:240,column:17}},"85":{start:{line:239,column:20},end:{line:239,column:60}},"86":{start:{line:242,column:32},end:{line:242,column:55}},"87":{start:{line:243,column:36},end:{line:243,column:37}},"88":{start:{line:244,column:29},end:{line:244,column:30}},"89":{start:{line:247,column:16},end:{line:263,column:17}},"90":{start:{line:247,column:29},end:{line:247,column:30}},"91":{start:{line:248,column:34},end:{line:248,column:65}},"92":{start:{line:249,column:35},end:{line:251,column:21}},"93":{start:{line:250,column:24},end:{line:250,column:55}},"94":{start:{line:250,column:43},end:{line:250,column:54}},"95":{start:{line:253,column:41},end:{line:255,column:31}},"96":{start:{line:254,column:24},end:{line:254,column:63}},"97":{start:{line:254,column:46},end:{line:254,column:49}},"98":{start:{line:257,column:32},end:{line:257,column:100}},"99":{start:{line:258,column:39},end:{line:258,column:52}},"100":{start:{line:260,column:37},end:{line:260,column:76}},"101":{start:{line:261,column:20},end:{line:261,column:57}},"102":{start:{line:262,column:20},end:{line:262,column:29}},"103":{start:{line:265,column:16},end:{line:267,column:17}},"104":{start:{line:266,column:20},end:{line:266,column:59}},"105":{start:{line:269,column:16},end:{line:269,column:63}},"106":{start:{line:271,column:16},end:{line:271,column:26}},"107":{start:{line:273,column:16},end:{line:275,column:17}},"108":{start:{line:274,column:20},end:{line:274,column:41}},"109":{start:{line:292,column:53},end:{line:292,column:60}},"110":{start:{line:293,column:8},end:{line:321,column:39}},"111":{start:{line:295,column:12},end:{line:320,column:13}},"112":{start:{line:296,column:16},end:{line:301,column:17}},"113":{start:{line:297,column:39},end:{line:297,column:68}},"114":{start:{line:298,column:20},end:{line:300,column:21}},"115":{start:{line:299,column:24},end:{line:299,column:42}},"116":{start:{line:303,column:16},end:{line:303,column:55}},"117":{start:{line:304,column:16},end:{line:306,column:17}},"118":{start:{line:305,column:20},end:{line:305,column:60}},"119":{start:{line:307,column:31},end:{line:307,column:70}},"120":{start:{line:309,column:16},end:{line:311,column:17}},"121":{start:{line:310,column:20},end:{line:310,column:56}},"122":{start:{line:313,column:16},end:{line:313,column:28}},"123":{start:{line:315,column:16},end:{line:315,column:26}},"124":{start:{line:317,column:16},end:{line:319,column:17}},"125":{start:{line:318,column:20},end:{line:318,column:41}},"126":{start:{line:331,column:8},end:{line:331,column:30}},"127":{start:{line:332,column:8},end:{line:332,column:66}},"128":{start:{line:333,column:8},end:{line:333,column:24}},"129":{start:{line:334,column:8},end:{line:334,column:44}},"130":{start:{line:343,column:8},end:{line:348,column:10}}},fnMap:{"0":{name:"executeWithRetry",decl:{start:{line:37,column:15},end:{line:37,column:31}},loc:{start:{line:37,column:96},end:{line:69,column:1}},line:37},"1":{name:"(anonymous_1)",decl:{start:{line:47,column:32},end:{line:47,column:33}},loc:{start:{line:48,column:24},end:{line:48,column:94}},line:48},"2":{name:"(anonymous_2)",decl:{start:{line:48,column:35},end:{line:48,column:36}},loc:{start:{line:48,column:41},end:{line:48,column:84}},line:48},"3":{name:"(anonymous_3)",decl:{start:{line:63,column:34},end:{line:63,column:35}},loc:{start:{line:63,column:45},end:{line:63,column:88}},line:63},"4":{name:"(anonymous_4)",decl:{start:{line:83,column:4},end:{line:83,column:5}},loc:{start:{line:83,column:78},end:{line:104,column:5}},line:83},"5":{name:"(anonymous_5)",decl:{start:{line:84,column:32},end:{line:84,column:33}},loc:{start:{line:84,column:46},end:{line:103,column:9}},line:84},"6":{name:"(anonymous_6)",decl:{start:{line:117,column:4},end:{line:117,column:5}},loc:{start:{line:117,column:69},end:{line:147,column:5}},line:117},"7":{name:"(anonymous_7)",decl:{start:{line:118,column:32},end:{line:118,column:33}},loc:{start:{line:118,column:46},end:{line:146,column:9}},line:118},"8":{name:"(anonymous_8)",decl:{start:{line:163,column:4},end:{line:163,column:5}},loc:{start:{line:163,column:100},end:{line:215,column:5}},line:163},"9":{name:"(anonymous_9)",decl:{start:{line:164,column:32},end:{line:164,column:33}},loc:{start:{line:164,column:46},end:{line:214,column:9}},line:164},"10":{name:"(anonymous_10)",decl:{start:{line:227,column:4},end:{line:227,column:5}},loc:{start:{line:227,column:51},end:{line:278,column:5}},line:227},"11":{name:"(anonymous_11)",decl:{start:{line:234,column:32},end:{line:234,column:33}},loc:{start:{line:234,column:46},end:{line:277,column:9}},line:234},"12":{name:"(anonymous_12)",decl:{start:{line:249,column:45},end:{line:249,column:46}},loc:{start:{line:250,column:24},end:{line:250,column:55}},line:250},"13":{name:"(anonymous_13)",decl:{start:{line:250,column:36},end:{line:250,column:37}},loc:{start:{line:250,column:43},end:{line:250,column:54}},line:250},"14":{name:"(anonymous_14)",decl:{start:{line:253,column:51},end:{line:253,column:52}},loc:{start:{line:254,column:24},end:{line:254,column:63}},line:254},"15":{name:"(anonymous_15)",decl:{start:{line:254,column:40},end:{line:254,column:41}},loc:{start:{line:254,column:46},end:{line:254,column:49}},line:254},"16":{name:"(anonymous_16)",decl:{start:{line:291,column:4},end:{line:291,column:5}},loc:{start:{line:291,column:77},end:{line:322,column:5}},line:291},"17":{name:"(anonymous_17)",decl:{start:{line:293,column:32},end:{line:293,column:33}},loc:{start:{line:293,column:46},end:{line:321,column:9}},line:293},"18":{name:"(anonymous_18)",decl:{start:{line:330,column:4},end:{line:330,column:5}},loc:{start:{line:330,column:29},end:{line:335,column:5}},line:330},"19":{name:"(anonymous_19)",decl:{start:{line:342,column:4},end:{line:342,column:5}},loc:{start:{line:342,column:19},end:{line:349,column:5}},line:342}},branchMap:{"0":{loc:{start:{line:10,column:0},end:{line:12,column:1}},type:"if",locations:[{start:{line:10,column:0},end:{line:12,column:1}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:10},"1":{loc:{start:{line:10,column:4},end:{line:10,column:52}},type:"binary-expr",locations:[{start:{line:10,column:4},end:{line:10,column:16}},{start:{line:10,column:20},end:{line:10,column:36}},{start:{line:10,column:40},end:{line:10,column:52}}],line:10},"2":{loc:{start:{line:18,column:14},end:{line:18,column:35}},type:"binary-expr",locations:[{start:{line:18,column:14},end:{line:18,column:29}},{start:{line:18,column:33},end:{line:18,column:35}}],line:18},"3":{loc:{start:{line:20,column:21},end:{line:20,column:60}},type:"binary-expr",locations:[{start:{line:20,column:21},end:{line:20,column:54}},{start:{line:20,column:58},end:{line:20,column:60}}],line:20},"4":{loc:{start:{line:21,column:16},end:{line:21,column:49}},type:"binary-expr",locations:[{start:{line:21,column:16},end:{line:21,column:44}},{start:{line:21,column:48},end:{line:21,column:49}}],line:21},"5":{loc:{start:{line:22,column:20},end:{line:22,column:61}},type:"binary-expr",locations:[{start:{line:22,column:20},end:{line:22,column:52}},{start:{line:22,column:56},end:{line:22,column:61}}],line:22},"6":{loc:{start:{line:23,column:24},end:{line:23,column:70}},type:"binary-expr",locations:[{start:{line:23,column:24},end:{line:23,column:61}},{start:{line:23,column:65},end:{line:23,column:70}}],line:23},"7":{loc:{start:{line:24,column:10},end:{line:24,column:39}},type:"binary-expr",locations:[{start:{line:24,column:10},end:{line:24,column:31}},{start:{line:24,column:35},end:{line:24,column:39}}],line:24},"8":{loc:{start:{line:25,column:14},end:{line:25,column:38}},type:"binary-expr",locations:[{start:{line:25,column:14},end:{line:25,column:26}},{start:{line:25,column:30},end:{line:25,column:38}}],line:25},"9":{loc:{start:{line:37,column:36},end:{line:37,column:47}},type:"default-arg",locations:[{start:{line:37,column:46},end:{line:37,column:47}}],line:37},"10":{loc:{start:{line:37,column:49},end:{line:37,column:61}},type:"default-arg",locations:[{start:{line:37,column:57},end:{line:37,column:61}}],line:37},"11":{loc:{start:{line:37,column:63},end:{line:37,column:78}},type:"default-arg",locations:[{start:{line:37,column:74},end:{line:37,column:78}}],line:37},"12":{loc:{start:{line:37,column:80},end:{line:37,column:94}},type:"default-arg",locations:[{start:{line:37,column:90},end:{line:37,column:94}}],line:37},"13":{loc:{start:{line:40,column:12},end:{line:42,column:13}},type:"if",locations:[{start:{line:40,column:12},end:{line:42,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:40},"14":{loc:{start:{line:44,column:12},end:{line:51,column:13}},type:"if",locations:[{start:{line:44,column:12},end:{line:51,column:13}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:44},"15":{loc:{start:{line:55,column:12},end:{line:55,column:47}},type:"if",locations:[{start:{line:55,column:12},end:{line:55,column:47}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:55},"16":{loc:{start:{line:58,column:12},end:{line:66,column:13}},type:"if",locations:[{start:{line:58,column:12},end:{line:66,column:13}},{start:{line:64,column:19},end:{line:66,column:13}}],line:58},"17":{loc:{start:{line:58,column:16},end:{line:62,column:51}},type:"binary-expr",locations:[{start:{line:58,column:16},end:{line:58,column:45}},{start:{line:59,column:16},end:{line:59,column:42}},{start:{line:60,column:16},end:{line:60,column:42}},{start:{line:61,column:16},end:{line:61,column:57}},{start:{line:62,column:16},end:{line:62,column:51}}],line:58},"18":{loc:{start:{line:83,column:38},end:{line:83,column:59}},type:"default-arg",locations:[{start:{line:83,column:55},end:{line:83,column:59}}],line:83},"19":{loc:{start:{line:83,column:61},end:{line:83,column:76}},type:"default-arg",locations:[{start:{line:83,column:72},end:{line:83,column:76}}],line:83},"20":{loc:{start:{line:88,column:16},end:{line:90,column:17}},type:"if",locations:[{start:{line:88,column:16},end:{line:90,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:88},"21":{loc:{start:{line:92,column:16},end:{line:94,column:17}},type:"if",locations:[{start:{line:92,column:16},end:{line:94,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:92},"22":{loc:{start:{line:92,column:20},end:{line:92,column:51}},type:"binary-expr",locations:[{start:{line:92,column:20},end:{line:92,column:34}},{start:{line:92,column:38},end:{line:92,column:51}}],line:92},"23":{loc:{start:{line:99,column:16},end:{line:101,column:17}},type:"if",locations:[{start:{line:99,column:16},end:{line:101,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:99},"24":{loc:{start:{line:117,column:52},end:{line:117,column:67}},type:"default-arg",locations:[{start:{line:117,column:63},end:{line:117,column:67}}],line:117},"25":{loc:{start:{line:121,column:16},end:{line:126,column:17}},type:"if",locations:[{start:{line:121,column:16},end:{line:126,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:121},"26":{loc:{start:{line:123,column:20},end:{line:125,column:21}},type:"if",locations:[{start:{line:123,column:20},end:{line:125,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:123},"27":{loc:{start:{line:129,column:16},end:{line:131,column:17}},type:"if",locations:[{start:{line:129,column:16},end:{line:131,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:129},"28":{loc:{start:{line:134,column:16},end:{line:136,column:17}},type:"if",locations:[{start:{line:134,column:16},end:{line:136,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:134},"29":{loc:{start:{line:142,column:16},end:{line:144,column:17}},type:"if",locations:[{start:{line:142,column:16},end:{line:144,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:142},"30":{loc:{start:{line:163,column:68},end:{line:163,column:81}},type:"default-arg",locations:[{start:{line:163,column:79},end:{line:163,column:81}}],line:163},"31":{loc:{start:{line:163,column:83},end:{line:163,column:98}},type:"default-arg",locations:[{start:{line:163,column:94},end:{line:163,column:98}}],line:163},"32":{loc:{start:{line:168,column:16},end:{line:170,column:17}},type:"if",locations:[{start:{line:168,column:16},end:{line:170,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:168},"33":{loc:{start:{line:172,column:16},end:{line:177,column:17}},type:"if",locations:[{start:{line:172,column:16},end:{line:177,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:172},"34":{loc:{start:{line:174,column:20},end:{line:176,column:21}},type:"if",locations:[{start:{line:174,column:20},end:{line:176,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:174},"35":{loc:{start:{line:174,column:24},end:{line:174,column:107}},type:"binary-expr",locations:[{start:{line:174,column:24},end:{line:174,column:54}},{start:{line:174,column:58},end:{line:174,column:84}},{start:{line:174,column:88},end:{line:174,column:107}}],line:174},"36":{loc:{start:{line:180,column:16},end:{line:182,column:17}},type:"if",locations:[{start:{line:180,column:16},end:{line:182,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:180},"37":{loc:{start:{line:202,column:16},end:{line:204,column:17}},type:"if",locations:[{start:{line:202,column:16},end:{line:204,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:202},"38":{loc:{start:{line:210,column:16},end:{line:212,column:17}},type:"if",locations:[{start:{line:210,column:16},end:{line:212,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:210},"39":{loc:{start:{line:227,column:37},end:{line:227,column:49}},type:"default-arg",locations:[{start:{line:227,column:47},end:{line:227,column:49}}],line:227},"40":{loc:{start:{line:228,column:16},end:{line:228,column:31}},type:"default-arg",locations:[{start:{line:228,column:27},end:{line:228,column:31}}],line:228},"41":{loc:{start:{line:228,column:33},end:{line:228,column:49}},type:"default-arg",locations:[{start:{line:228,column:45},end:{line:228,column:49}}],line:228},"42":{loc:{start:{line:228,column:51},end:{line:228,column:72}},type:"default-arg",locations:[{start:{line:228,column:68},end:{line:228,column:72}}],line:228},"43":{loc:{start:{line:230,column:8},end:{line:232,column:9}},type:"if",locations:[{start:{line:230,column:8},end:{line:232,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:230},"44":{loc:{start:{line:230,column:12},end:{line:230,column:44}},type:"binary-expr",locations:[{start:{line:230,column:12},end:{line:230,column:20}},{start:{line:230,column:24},end:{line:230,column:44}}],line:230},"45":{loc:{start:{line:238,column:16},end:{line:240,column:17}},type:"if",locations:[{start:{line:238,column:16},end:{line:240,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:238},"46":{loc:{start:{line:265,column:16},end:{line:267,column:17}},type:"if",locations:[{start:{line:265,column:16},end:{line:267,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:265},"47":{loc:{start:{line:265,column:20},end:{line:265,column:51}},type:"binary-expr",locations:[{start:{line:265,column:20},end:{line:265,column:34}},{start:{line:265,column:38},end:{line:265,column:51}}],line:265},"48":{loc:{start:{line:273,column:16},end:{line:275,column:17}},type:"if",locations:[{start:{line:273,column:16},end:{line:275,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:273},"49":{loc:{start:{line:291,column:63},end:{line:291,column:75}},type:"default-arg",locations:[{start:{line:291,column:73},end:{line:291,column:75}}],line:291},"50":{loc:{start:{line:292,column:16},end:{line:292,column:31}},type:"default-arg",locations:[{start:{line:292,column:26},end:{line:292,column:31}}],line:292},"51":{loc:{start:{line:292,column:33},end:{line:292,column:48}},type:"default-arg",locations:[{start:{line:292,column:44},end:{line:292,column:48}}],line:292},"52":{loc:{start:{line:296,column:16},end:{line:301,column:17}},type:"if",locations:[{start:{line:296,column:16},end:{line:301,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:296},"53":{loc:{start:{line:298,column:20},end:{line:300,column:21}},type:"if",locations:[{start:{line:298,column:20},end:{line:300,column:21}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:298},"54":{loc:{start:{line:304,column:16},end:{line:306,column:17}},type:"if",locations:[{start:{line:304,column:16},end:{line:306,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:304},"55":{loc:{start:{line:309,column:16},end:{line:311,column:17}},type:"if",locations:[{start:{line:309,column:16},end:{line:311,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:309},"56":{loc:{start:{line:317,column:16},end:{line:319,column:17}},type:"if",locations:[{start:{line:317,column:16},end:{line:319,column:17}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:317}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[0],"11":[0],"12":[0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0],"18":[0],"19":[0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0],"31":[0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0],"40":[0],"41":[0],"42":[0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0],"50":[0],"51":[0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"cd609753ba4643bc02080fc29352d7f999fc4dfc"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1azmom8sei=function(){return actualCoverage;};}return actualCoverage;}cov_1azmom8sei();const db=(cov_1azmom8sei().s[0]++,require('mysql2/promise'));const{getArrayItem,addArrayItem,delPrefixKeyItem}=(cov_1azmom8sei().s[1]++,require('./redis.Connector'));cov_1azmom8sei().s[2]++;require('dotenv').config();const env=(cov_1azmom8sei().s[3]++,process.env);// Check if Redis is enabled (default: true)
const REDIS_ENABLED=(cov_1azmom8sei().s[4]++,env.REDIS_ENABLED!=='false');// Validate required database configuration
cov_1azmom8sei().s[5]++;if((cov_1azmom8sei().b[1][0]++,!env.DB_HOST)||(cov_1azmom8sei().b[1][1]++,!env.DB_USERNAME)||(cov_1azmom8sei().b[1][2]++,!env.DB_NAME)){cov_1azmom8sei().b[0][0]++;cov_1azmom8sei().s[6]++;throw new Error('Missing required database configuration: DB_HOST, DB_USERNAME, and DB_NAME must be set');}else{cov_1azmom8sei().b[0][1]++;}// Connection pool configuration with auto-reconnection
const poolConfig=(cov_1azmom8sei().s[7]++,{host:env.DB_HOST,user:env.DB_USERNAME,password:(cov_1azmom8sei().b[2][0]++,env.DB_PASSWORD)||(cov_1azmom8sei().b[2][1]++,''),database:env.DB_NAME,connectionLimit:(cov_1azmom8sei().b[3][0]++,parseInt(env.DB_CONNECTION_LIMIT))||(cov_1azmom8sei().b[3][1]++,10),queueLimit:(cov_1azmom8sei().b[4][0]++,parseInt(env.DB_QUEUE_LIMIT))||(cov_1azmom8sei().b[4][1]++,0),connectTimeout:(cov_1azmom8sei().b[5][0]++,parseInt(env.DB_CONNECT_TIMEOUT))||(cov_1azmom8sei().b[5][1]++,10000),multipleStatements:(cov_1azmom8sei().b[6][0]++,env.DB_MULTIPLE_STATEMENTS==='true')||(cov_1azmom8sei().b[6][1]++,false),port:(cov_1azmom8sei().b[7][0]++,parseInt(env.DB_PORT))||(cov_1azmom8sei().b[7][1]++,3306),timezone:(cov_1azmom8sei().b[8][0]++,env.TIMEZONE)||(cov_1azmom8sei().b[8][1]++,'+00:00'),waitForConnections:true,enableKeepAlive:true,keepAliveInitialDelay:0});const con=(cov_1azmom8sei().s[8]++,db.createPool(poolConfig));// Graceful shutdown flag
let isShuttingDown=(cov_1azmom8sei().s[9]++,false);// Retry helper function with optional database switching and timeout protection
async function executeWithRetry(fn,retries=(cov_1azmom8sei().b[9][0]++,3),delay=(cov_1azmom8sei().b[10][0]++,1000),database=(cov_1azmom8sei().b[11][0]++,null),timeout=(cov_1azmom8sei().b[12][0]++,null)){cov_1azmom8sei().f[0]++;cov_1azmom8sei().s[10]++;for(let i=(cov_1azmom8sei().s[11]++,0);i<retries;i++){cov_1azmom8sei().s[12]++;try{cov_1azmom8sei().s[13]++;if(isShuttingDown){cov_1azmom8sei().b[13][0]++;cov_1azmom8sei().s[14]++;throw new Error('Server is shutting down, cannot process new queries');}else{cov_1azmom8sei().b[13][1]++;}cov_1azmom8sei().s[15]++;if(timeout){cov_1azmom8sei().b[14][0]++;cov_1azmom8sei().s[16]++;return await Promise.race([fn(database),new Promise((_,reject)=>{cov_1azmom8sei().f[1]++;cov_1azmom8sei().s[17]++;return setTimeout(()=>{cov_1azmom8sei().f[2]++;cov_1azmom8sei().s[18]++;return reject(new Error('Query timeout exceeded'));},timeout);})]);}else{cov_1azmom8sei().b[14][1]++;}cov_1azmom8sei().s[19]++;return await fn(database);}catch(error){cov_1azmom8sei().s[20]++;if(i===retries-1){cov_1azmom8sei().b[15][0]++;cov_1azmom8sei().s[21]++;throw error;}else{cov_1azmom8sei().b[15][1]++;}// Retry only on connection errors
cov_1azmom8sei().s[22]++;if((cov_1azmom8sei().b[17][0]++,error.code==='ECONNREFUSED')||(cov_1azmom8sei().b[17][1]++,error.code==='ETIMEDOUT')||(cov_1azmom8sei().b[17][2]++,error.code==='ENOTFOUND')||(cov_1azmom8sei().b[17][3]++,error.code==='PROTOCOL_CONNECTION_LOST')||(cov_1azmom8sei().b[17][4]++,error.code==='ER_CON_COUNT_ERROR')){cov_1azmom8sei().b[16][0]++;cov_1azmom8sei().s[23]++;await new Promise(resolve=>{cov_1azmom8sei().f[3]++;cov_1azmom8sei().s[24]++;return setTimeout(resolve,delay*Math.pow(2,i));});}else{cov_1azmom8sei().b[16][1]++;cov_1azmom8sei().s[25]++;throw error;}}}}cov_1azmom8sei().s[26]++;module.exports={/**
     * Executes a SQL query and returns the result from the cache or the database.
     * If a resetCacheName is provided, it deletes the cache item before executing the query.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string|null} resetCacheName - The name of the cache item to reset (optional).
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<any>} - A promise that resolves with the result of the query.
     * @throws {Error} - If an error occurs during the query execution.
     */async QuaryCache(sql,parameters,resetCacheName=(cov_1azmom8sei().b[18][0]++,null),database=(cov_1azmom8sei().b[19][0]++,null)){cov_1azmom8sei().f[4]++;cov_1azmom8sei().s[27]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[5]++;let connection;cov_1azmom8sei().s[28]++;try{cov_1azmom8sei().s[29]++;connection=await con.getConnection();cov_1azmom8sei().s[30]++;if(db){cov_1azmom8sei().b[20][0]++;cov_1azmom8sei().s[31]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[20][1]++;}const[data]=(cov_1azmom8sei().s[32]++,await connection.query(sql,parameters));cov_1azmom8sei().s[33]++;if((cov_1azmom8sei().b[22][0]++,resetCacheName)&&(cov_1azmom8sei().b[22][1]++,REDIS_ENABLED)){cov_1azmom8sei().b[21][0]++;cov_1azmom8sei().s[34]++;await delPrefixKeyItem(resetCacheName);}else{cov_1azmom8sei().b[21][1]++;}cov_1azmom8sei().s[35]++;return data;}catch(err){cov_1azmom8sei().s[36]++;throw err;}finally{cov_1azmom8sei().s[37]++;if(connection){cov_1azmom8sei().b[23][0]++;cov_1azmom8sei().s[38]++;connection.release();}else{cov_1azmom8sei().b[23][1]++;}}},3,1000,database);},/**
     * Retrieves data from cache or database based on the provided SQL query and parameters.
     * If the data is found in the cache, it is returned. Otherwise, the data is fetched from the database,
     * stored in the cache, and then returned.
     *
     * @param {string} sql - The SQL query to be executed.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string} cacheName - The name of the cache to store the data.
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<Array>} - A promise that resolves to the retrieved data.
     * @throws {Error} - If there is an error while retrieving the data.
     */async getCacheQuery(sql,parameters,cacheName,database=(cov_1azmom8sei().b[24][0]++,null)){cov_1azmom8sei().f[6]++;cov_1azmom8sei().s[39]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[7]++;let connection;cov_1azmom8sei().s[40]++;try{cov_1azmom8sei().s[41]++;if(REDIS_ENABLED){cov_1azmom8sei().b[25][0]++;const cachedData=(cov_1azmom8sei().s[42]++,await getArrayItem(cacheName));cov_1azmom8sei().s[43]++;if(cachedData.length>0){cov_1azmom8sei().b[26][0]++;cov_1azmom8sei().s[44]++;return cachedData;}else{cov_1azmom8sei().b[26][1]++;}}else{cov_1azmom8sei().b[25][1]++;}cov_1azmom8sei().s[45]++;connection=await con.getConnection();cov_1azmom8sei().s[46]++;if(db){cov_1azmom8sei().b[27][0]++;cov_1azmom8sei().s[47]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[27][1]++;}const[data]=(cov_1azmom8sei().s[48]++,await connection.query(sql,parameters));cov_1azmom8sei().s[49]++;if(REDIS_ENABLED){cov_1azmom8sei().b[28][0]++;cov_1azmom8sei().s[50]++;await addArrayItem(cacheName,data);}else{cov_1azmom8sei().b[28][1]++;}cov_1azmom8sei().s[51]++;return data;}catch(err){cov_1azmom8sei().s[52]++;throw err;}finally{cov_1azmom8sei().s[53]++;if(connection){cov_1azmom8sei().b[29][0]++;cov_1azmom8sei().s[54]++;connection.release();}else{cov_1azmom8sei().b[29][1]++;}}},3,1000,database);},/**
     * Retrieves paginated data from cache or database based on the provided SQL query and parameters.
     * If the data is available in cache, it is returned directly. Otherwise, the data is fetched from the database,
     * paginated, and then stored in the cache for future use.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be used in the SQL query.
     * @param {string} cacheName - The name of the cache to store the data.
     * @param {number} page - The page number of the data to retrieve.
     * @param {number} [pageSize=30] - The number of records per page. Defaults to 30 if not provided.
     * @param {string|null} database - The database name to switch to (optional).
     * @returns {Promise<Object>} - A promise that resolves to an object containing the paginated data.
     * @throws {Error} - If an error occurs during the execution of the function.
     */async getCacheQueryPagination(sql,parameters,cacheName,page,pageSize=(cov_1azmom8sei().b[30][0]++,30),database=(cov_1azmom8sei().b[31][0]++,null)){cov_1azmom8sei().f[8]++;cov_1azmom8sei().s[55]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[9]++;let connection;cov_1azmom8sei().s[56]++;try{cov_1azmom8sei().s[57]++;// Validate pageSize to prevent division by zero
if(pageSize<=0){cov_1azmom8sei().b[32][0]++;cov_1azmom8sei().s[58]++;throw new Error('Page size must be greater than 0');}else{cov_1azmom8sei().b[32][1]++;}cov_1azmom8sei().s[59]++;if(REDIS_ENABLED){cov_1azmom8sei().b[33][0]++;const cachedData=(cov_1azmom8sei().s[60]++,await getArrayItem(cacheName));cov_1azmom8sei().s[61]++;if((cov_1azmom8sei().b[35][0]++,typeof cachedData==='object')&&(cov_1azmom8sei().b[35][1]++,!Array.isArray(cachedData))&&(cov_1azmom8sei().b[35][2]++,cachedData!==null)){cov_1azmom8sei().b[34][0]++;cov_1azmom8sei().s[62]++;return cachedData;}else{cov_1azmom8sei().b[34][1]++;}}else{cov_1azmom8sei().b[33][1]++;}cov_1azmom8sei().s[63]++;connection=await con.getConnection();cov_1azmom8sei().s[64]++;if(db){cov_1azmom8sei().b[36][0]++;cov_1azmom8sei().s[65]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[36][1]++;}// Get total count with original query
const[allData]=(cov_1azmom8sei().s[66]++,await connection.query(sql,parameters));const totalCount=(cov_1azmom8sei().s[67]++,allData.length);// Modify SQL for pagination
const offset=(cov_1azmom8sei().s[68]++,page*pageSize);const paginatedSql=(cov_1azmom8sei().s[69]++,`${sql} LIMIT ${offset}, ${pageSize}`);// Get paginated data
const[data]=(cov_1azmom8sei().s[70]++,await connection.query(paginatedSql,parameters));// Prepare result
const result=(cov_1azmom8sei().s[71]++,{totalCount,pageCount:Math.ceil(totalCount/pageSize),detail:data});cov_1azmom8sei().s[72]++;if(REDIS_ENABLED){cov_1azmom8sei().b[37][0]++;cov_1azmom8sei().s[73]++;await addArrayItem(cacheName,result);}else{cov_1azmom8sei().b[37][1]++;}cov_1azmom8sei().s[74]++;return result;}catch(err){cov_1azmom8sei().s[75]++;throw err;}finally{cov_1azmom8sei().s[76]++;if(connection){cov_1azmom8sei().b[38][0]++;cov_1azmom8sei().s[77]++;connection.release();}else{cov_1azmom8sei().b[38][1]++;}}},3,1000,database);},/**
     * Executes a bulk insert operation with chunking for large datasets.
     * Automatically splits large datasets into chunks to prevent memory issues.
     *
     * @param {string} table - The table name to insert into.
     * @param {Array} records - Array of objects with column-value pairs.
     * @param {Object} options - Optional settings: { database, chunkSize, resetCacheName }
     * @returns {Promise<Object>} - A promise that resolves with insert statistics.
     * @throws {Error} - If an error occurs during the bulk insert.
     */async bulkInsert(table,records,options=(cov_1azmom8sei().b[39][0]++,{})){cov_1azmom8sei().f[10]++;const{database=(cov_1azmom8sei().b[40][0]++,null),chunkSize=(cov_1azmom8sei().b[41][0]++,1000),resetCacheName=(cov_1azmom8sei().b[42][0]++,null)}=(cov_1azmom8sei().s[78]++,options);cov_1azmom8sei().s[79]++;if((cov_1azmom8sei().b[44][0]++,!records)||(cov_1azmom8sei().b[44][1]++,records.length===0)){cov_1azmom8sei().b[43][0]++;cov_1azmom8sei().s[80]++;return{insertedRows:0,chunks:0};}else{cov_1azmom8sei().b[43][1]++;}cov_1azmom8sei().s[81]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[11]++;let connection;cov_1azmom8sei().s[82]++;try{cov_1azmom8sei().s[83]++;connection=await con.getConnection();cov_1azmom8sei().s[84]++;if(db){cov_1azmom8sei().b[45][0]++;cov_1azmom8sei().s[85]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[45][1]++;}const columns=(cov_1azmom8sei().s[86]++,Object.keys(records[0]));let totalInserted=(cov_1azmom8sei().s[87]++,0);let chunks=(cov_1azmom8sei().s[88]++,0);// Process in chunks
cov_1azmom8sei().s[89]++;for(let i=(cov_1azmom8sei().s[90]++,0);i<records.length;i+=chunkSize){const chunk=(cov_1azmom8sei().s[91]++,records.slice(i,i+chunkSize));const values=(cov_1azmom8sei().s[92]++,chunk.map(record=>{cov_1azmom8sei().f[12]++;cov_1azmom8sei().s[93]++;return columns.map(col=>{cov_1azmom8sei().f[13]++;cov_1azmom8sei().s[94]++;return record[col];});}));const placeholders=(cov_1azmom8sei().s[95]++,chunk.map(()=>{cov_1azmom8sei().f[14]++;cov_1azmom8sei().s[96]++;return`(${columns.map(()=>{cov_1azmom8sei().f[15]++;cov_1azmom8sei().s[97]++;return'?';}).join(',')})`;}).join(','));const sql=(cov_1azmom8sei().s[98]++,`INSERT INTO ${table} (${columns.join(',')}) VALUES ${placeholders}`);const flatValues=(cov_1azmom8sei().s[99]++,values.flat());const[result]=(cov_1azmom8sei().s[100]++,await connection.query(sql,flatValues));cov_1azmom8sei().s[101]++;totalInserted+=result.affectedRows;cov_1azmom8sei().s[102]++;chunks++;}cov_1azmom8sei().s[103]++;if((cov_1azmom8sei().b[47][0]++,resetCacheName)&&(cov_1azmom8sei().b[47][1]++,REDIS_ENABLED)){cov_1azmom8sei().b[46][0]++;cov_1azmom8sei().s[104]++;await delPrefixKeyItem(resetCacheName);}else{cov_1azmom8sei().b[46][1]++;}cov_1azmom8sei().s[105]++;return{insertedRows:totalInserted,chunks};}catch(err){cov_1azmom8sei().s[106]++;throw err;}finally{cov_1azmom8sei().s[107]++;if(connection){cov_1azmom8sei().b[48][0]++;cov_1azmom8sei().s[108]++;connection.release();}else{cov_1azmom8sei().b[48][1]++;}}},3,1000,database);},/**
     * Executes a query with timeout protection.
     * Prevents long-running queries from blocking the application.
     *
     * @param {string} sql - The SQL query to execute.
     * @param {Array} parameters - The parameters to be passed to the SQL query.
     * @param {string} cacheName - The name of the cache.
     * @param {Object} options - Optional settings: { timeout, database }
     * @returns {Promise<any>} - A promise that resolves with the result of the query.
     * @throws {Error} - If timeout is exceeded or query fails.
     */async getCacheQueryWithTimeout(sql,parameters,cacheName,options=(cov_1azmom8sei().b[49][0]++,{})){cov_1azmom8sei().f[16]++;const{timeout=(cov_1azmom8sei().b[50][0]++,30000),database=(cov_1azmom8sei().b[51][0]++,null)}=(cov_1azmom8sei().s[109]++,options);cov_1azmom8sei().s[110]++;return executeWithRetry(async db=>{cov_1azmom8sei().f[17]++;let connection;cov_1azmom8sei().s[111]++;try{cov_1azmom8sei().s[112]++;if(REDIS_ENABLED){cov_1azmom8sei().b[52][0]++;const cachedData=(cov_1azmom8sei().s[113]++,await getArrayItem(cacheName));cov_1azmom8sei().s[114]++;if(cachedData.length>0){cov_1azmom8sei().b[53][0]++;cov_1azmom8sei().s[115]++;return cachedData;}else{cov_1azmom8sei().b[53][1]++;}}else{cov_1azmom8sei().b[52][1]++;}cov_1azmom8sei().s[116]++;connection=await con.getConnection();cov_1azmom8sei().s[117]++;if(db){cov_1azmom8sei().b[54][0]++;cov_1azmom8sei().s[118]++;await connection.query(`USE \`${db}\``);}else{cov_1azmom8sei().b[54][1]++;}const[data]=(cov_1azmom8sei().s[119]++,await connection.query(sql,parameters));cov_1azmom8sei().s[120]++;if(REDIS_ENABLED){cov_1azmom8sei().b[55][0]++;cov_1azmom8sei().s[121]++;await addArrayItem(cacheName,data);}else{cov_1azmom8sei().b[55][1]++;}cov_1azmom8sei().s[122]++;return data;}catch(err){cov_1azmom8sei().s[123]++;throw err;}finally{cov_1azmom8sei().s[124]++;if(connection){cov_1azmom8sei().b[56][0]++;cov_1azmom8sei().s[125]++;connection.release();}else{cov_1azmom8sei().b[56][1]++;}}},3,1000,database,timeout);},/**
     * Gracefully closes all database connections.
     * Should be called during application shutdown to prevent connection leaks.
     *
     * @returns {Promise<void>}
     */async closeConnections(){cov_1azmom8sei().f[18]++;cov_1azmom8sei().s[126]++;isShuttingDown=true;cov_1azmom8sei().s[127]++;console.log('Closing database connections gracefully...');cov_1azmom8sei().s[128]++;await con.end();cov_1azmom8sei().s[129]++;console.log('Database pool closed');},/**
     * Gets current pool statistics for monitoring.
     *
     * @returns {Object} - Pool statistics including active connections.
     */getPoolStats(){cov_1azmom8sei().f[19]++;cov_1azmom8sei().s[130]++;return{totalConnections:con.pool._allConnections.length,activeConnections:con.pool._allConnections.length-con.pool._freeConnections.length,freeConnections:con.pool._freeConnections.length,queuedRequests:con.pool._connectionQueue.length};}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,