function cov_1bw7smlzdc(){var path="/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/core/autoInvalidate.js";var hash="74d5b0d698b83a6ebbc55ea57556514b51530f8e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hayatialikeles/Desktop/projects/custom_package/node_pacgage/core/autoInvalidate.js",statementMap:{"0":{start:{line:8,column:30},end:{line:8,column:35}},"1":{start:{line:9,column:24},end:{line:9,column:26}},"2":{start:{line:18,column:4},end:{line:18,column:55}},"3":{start:{line:19,column:4},end:{line:19,column:44}},"4":{start:{line:26,column:4},end:{line:26,column:84}},"5":{start:{line:36,column:24},end:{line:36,column:63}},"6":{start:{line:37,column:4},end:{line:37,column:43}},"7":{start:{line:37,column:21},end:{line:37,column:43}},"8":{start:{line:40,column:24},end:{line:40,column:56}},"9":{start:{line:41,column:4},end:{line:41,column:43}},"10":{start:{line:41,column:21},end:{line:41,column:43}},"11":{start:{line:44,column:24},end:{line:44,column:63}},"12":{start:{line:45,column:4},end:{line:45,column:43}},"13":{start:{line:45,column:21},end:{line:45,column:43}},"14":{start:{line:48,column:25},end:{line:48,column:65}},"15":{start:{line:49,column:4},end:{line:49,column:45}},"16":{start:{line:49,column:22},end:{line:49,column:45}},"17":{start:{line:51,column:4},end:{line:51,column:16}},"18":{start:{line:60,column:4},end:{line:60,column:66}},"19":{start:{line:69,column:4},end:{line:69,column:30}},"20":{start:{line:69,column:20},end:{line:69,column:30}},"21":{start:{line:72,column:4},end:{line:75,column:5}},"22":{start:{line:73,column:22},end:{line:73,column:50}},"23":{start:{line:74,column:8},end:{line:74,column:54}},"24":{start:{line:78,column:4},end:{line:78,column:48}},"25":{start:{line:89,column:4},end:{line:91,column:5}},"26":{start:{line:90,column:8},end:{line:90,column:78}},"27":{start:{line:94,column:4},end:{line:96,column:5}},"28":{start:{line:95,column:8},end:{line:95,column:18}},"29":{start:{line:99,column:4},end:{line:101,column:5}},"30":{start:{line:100,column:8},end:{line:100,column:18}},"31":{start:{line:104,column:22},end:{line:104,column:43}},"32":{start:{line:105,column:4},end:{line:105,column:46}},"33":{start:{line:108,column:0},end:{line:115,column:2}}},fnMap:{"0":{name:"enableAutoInvalidation",decl:{start:{line:17,column:9},end:{line:17,column:31}},loc:{start:{line:17,column:45},end:{line:20,column:1}},line:17},"1":{name:"isAutoInvalidationEnabled",decl:{start:{line:25,column:9},end:{line:25,column:34}},loc:{start:{line:25,column:37},end:{line:27,column:1}},line:25},"2":{name:"extractTableName",decl:{start:{line:34,column:9},end:{line:34,column:25}},loc:{start:{line:34,column:31},end:{line:52,column:1}},line:34},"3":{name:"isWriteOperation",decl:{start:{line:59,column:9},end:{line:59,column:25}},loc:{start:{line:59,column:31},end:{line:61,column:1}},line:59},"4":{name:"getInvalidationPatterns",decl:{start:{line:68,column:9},end:{line:68,column:32}},loc:{start:{line:68,column:44},end:{line:79,column:1}},line:68},"5":{name:"determineInvalidationPatterns",decl:{start:{line:87,column:9},end:{line:87,column:38}},loc:{start:{line:87,column:66},end:{line:106,column:1}},line:87}},branchMap:{"0":{loc:{start:{line:17,column:32},end:{line:17,column:43}},type:"default-arg",locations:[{start:{line:17,column:41},end:{line:17,column:43}}],line:17},"1":{loc:{start:{line:19,column:24},end:{line:19,column:43}},type:"binary-expr",locations:[{start:{line:19,column:24},end:{line:19,column:37}},{start:{line:19,column:41},end:{line:19,column:43}}],line:19},"2":{loc:{start:{line:26,column:11},end:{line:26,column:83}},type:"binary-expr",locations:[{start:{line:26,column:11},end:{line:26,column:34}},{start:{line:26,column:38},end:{line:26,column:83}}],line:26},"3":{loc:{start:{line:37,column:4},end:{line:37,column:43}},type:"if",locations:[{start:{line:37,column:4},end:{line:37,column:43}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:37},"4":{loc:{start:{line:41,column:4},end:{line:41,column:43}},type:"if",locations:[{start:{line:41,column:4},end:{line:41,column:43}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:41},"5":{loc:{start:{line:45,column:4},end:{line:45,column:43}},type:"if",locations:[{start:{line:45,column:4},end:{line:45,column:43}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:45},"6":{loc:{start:{line:49,column:4},end:{line:49,column:45}},type:"if",locations:[{start:{line:49,column:4},end:{line:49,column:45}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:49},"7":{loc:{start:{line:69,column:4},end:{line:69,column:30}},type:"if",locations:[{start:{line:69,column:4},end:{line:69,column:30}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:69},"8":{loc:{start:{line:72,column:4},end:{line:75,column:5}},type:"if",locations:[{start:{line:72,column:4},end:{line:75,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:72},"9":{loc:{start:{line:74,column:15},end:{line:74,column:53}},type:"cond-expr",locations:[{start:{line:74,column:38},end:{line:74,column:43}},{start:{line:74,column:46},end:{line:74,column:53}}],line:74},"10":{loc:{start:{line:87,column:44},end:{line:87,column:64}},type:"default-arg",locations:[{start:{line:87,column:60},end:{line:87,column:64}}],line:87},"11":{loc:{start:{line:89,column:4},end:{line:91,column:5}},type:"if",locations:[{start:{line:89,column:4},end:{line:91,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:89},"12":{loc:{start:{line:90,column:15},end:{line:90,column:77}},type:"cond-expr",locations:[{start:{line:90,column:46},end:{line:90,column:59}},{start:{line:90,column:62},end:{line:90,column:77}}],line:90},"13":{loc:{start:{line:94,column:4},end:{line:96,column:5}},type:"if",locations:[{start:{line:94,column:4},end:{line:96,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:94},"14":{loc:{start:{line:99,column:4},end:{line:101,column:5}},type:"if",locations:[{start:{line:99,column:4},end:{line:101,column:5}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:99}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"74d5b0d698b83a6ebbc55ea57556514b51530f8e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1bw7smlzdc=function(){return actualCoverage;};}return actualCoverage;}cov_1bw7smlzdc();/**
 * Auto Invalidation Module (v2.6.0)
 *
 * Automatically invalidates cache when write operations (INSERT/UPDATE/DELETE) occur.
 * Disabled by default for backward compatibility.
 */let autoInvalidationEnabled=(cov_1bw7smlzdc().s[0]++,false);let invalidationRules=(cov_1bw7smlzdc().s[1]++,{});/**
 * Enables auto invalidation feature
 * @param {Object} config - Configuration options
 * @param {boolean} config.enabled - Enable/disable auto invalidation
 * @param {Object} config.tables - Table-specific invalidation patterns
 */function enableAutoInvalidation(config=(cov_1bw7smlzdc().b[0][0]++,{})){cov_1bw7smlzdc().f[0]++;cov_1bw7smlzdc().s[2]++;autoInvalidationEnabled=config.enabled!==false;cov_1bw7smlzdc().s[3]++;invalidationRules=(cov_1bw7smlzdc().b[1][0]++,config.tables)||(cov_1bw7smlzdc().b[1][1]++,{});}/**
 * Checks if auto invalidation is enabled
 */function isAutoInvalidationEnabled(){cov_1bw7smlzdc().f[1]++;cov_1bw7smlzdc().s[4]++;return(cov_1bw7smlzdc().b[2][0]++,autoInvalidationEnabled)||(cov_1bw7smlzdc().b[2][1]++,process.env.CORE_AUTO_INVALIDATION==='true');}/**
 * Extracts table name from SQL query
 * @param {string} sql - SQL query
 * @returns {string|null} - Table name or null
 */function extractTableName(sql){cov_1bw7smlzdc().f[2]++;// INSERT INTO users...
const insertMatch=(cov_1bw7smlzdc().s[5]++,sql.match(/INSERT\s+INTO\s+`?(\w+)`?/i));cov_1bw7smlzdc().s[6]++;if(insertMatch){cov_1bw7smlzdc().b[3][0]++;cov_1bw7smlzdc().s[7]++;return insertMatch[1];}else{cov_1bw7smlzdc().b[3][1]++;}// UPDATE users SET...
const updateMatch=(cov_1bw7smlzdc().s[8]++,sql.match(/UPDATE\s+`?(\w+)`?/i));cov_1bw7smlzdc().s[9]++;if(updateMatch){cov_1bw7smlzdc().b[4][0]++;cov_1bw7smlzdc().s[10]++;return updateMatch[1];}else{cov_1bw7smlzdc().b[4][1]++;}// DELETE FROM users...
const deleteMatch=(cov_1bw7smlzdc().s[11]++,sql.match(/DELETE\s+FROM\s+`?(\w+)`?/i));cov_1bw7smlzdc().s[12]++;if(deleteMatch){cov_1bw7smlzdc().b[5][0]++;cov_1bw7smlzdc().s[13]++;return deleteMatch[1];}else{cov_1bw7smlzdc().b[5][1]++;}// REPLACE INTO users...
const replaceMatch=(cov_1bw7smlzdc().s[14]++,sql.match(/REPLACE\s+INTO\s+`?(\w+)`?/i));cov_1bw7smlzdc().s[15]++;if(replaceMatch){cov_1bw7smlzdc().b[6][0]++;cov_1bw7smlzdc().s[16]++;return replaceMatch[1];}else{cov_1bw7smlzdc().b[6][1]++;}cov_1bw7smlzdc().s[17]++;return null;}/**
 * Checks if SQL is a write operation
 * @param {string} sql - SQL query
 * @returns {boolean}
 */function isWriteOperation(sql){cov_1bw7smlzdc().f[3]++;cov_1bw7smlzdc().s[18]++;return /^\s*(INSERT|UPDATE|DELETE|REPLACE)/i.test(sql.trim());}/**
 * Gets invalidation patterns for a table
 * @param {string} tableName - Table name
 * @returns {Array<string>} - Array of cache key patterns to invalidate
 */function getInvalidationPatterns(tableName){cov_1bw7smlzdc().f[4]++;cov_1bw7smlzdc().s[19]++;if(!tableName){cov_1bw7smlzdc().b[7][0]++;cov_1bw7smlzdc().s[20]++;return[];}else{cov_1bw7smlzdc().b[7][1]++;}// User-defined rules take priority
cov_1bw7smlzdc().s[21]++;if(invalidationRules[tableName]){cov_1bw7smlzdc().b[8][0]++;const rules=(cov_1bw7smlzdc().s[22]++,invalidationRules[tableName]);cov_1bw7smlzdc().s[23]++;return Array.isArray(rules)?(cov_1bw7smlzdc().b[9][0]++,rules):(cov_1bw7smlzdc().b[9][1]++,[rules]);}else{cov_1bw7smlzdc().b[8][1]++;}// Default patterns: tableName_* and tableName:*
cov_1bw7smlzdc().s[24]++;return[`${tableName}_*`,`${tableName}:*`];}/**
 * Determines which cache patterns should be invalidated for a query
 * @param {string} sql - SQL query
 * @param {string|null} manualPattern - Manual invalidation pattern (takes priority)
 * @returns {Array<string>} - Array of patterns to invalidate
 */function determineInvalidationPatterns(sql,manualPattern=(cov_1bw7smlzdc().b[10][0]++,null)){cov_1bw7smlzdc().f[5]++;cov_1bw7smlzdc().s[25]++;// Manual pattern takes priority
if(manualPattern){cov_1bw7smlzdc().b[11][0]++;cov_1bw7smlzdc().s[26]++;return Array.isArray(manualPattern)?(cov_1bw7smlzdc().b[12][0]++,manualPattern):(cov_1bw7smlzdc().b[12][1]++,[manualPattern]);}else{cov_1bw7smlzdc().b[11][1]++;}// Auto invalidation only if enabled
cov_1bw7smlzdc().s[27]++;if(!isAutoInvalidationEnabled()){cov_1bw7smlzdc().b[13][0]++;cov_1bw7smlzdc().s[28]++;return[];}else{cov_1bw7smlzdc().b[13][1]++;}// Check if this is a write operation
cov_1bw7smlzdc().s[29]++;if(!isWriteOperation(sql)){cov_1bw7smlzdc().b[14][0]++;cov_1bw7smlzdc().s[30]++;return[];}else{cov_1bw7smlzdc().b[14][1]++;}// Extract table name and get patterns
const tableName=(cov_1bw7smlzdc().s[31]++,extractTableName(sql));cov_1bw7smlzdc().s[32]++;return getInvalidationPatterns(tableName);}cov_1bw7smlzdc().s[33]++;module.exports={enableAutoInvalidation,isAutoInvalidationEnabled,extractTableName,isWriteOperation,getInvalidationPatterns,determineInvalidationPatterns};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,