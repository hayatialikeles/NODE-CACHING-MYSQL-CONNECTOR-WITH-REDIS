# ============================================
# MySQL Database Configuration (REQUIRED)
# ============================================

# MySQL server hostname or IP address
DB_HOST=localhost

# MySQL server port (default: 3306)
DB_PORT=3306

# Database username
DB_USERNAME=root

# Database password (leave empty if no password)
DB_PASSWORD=

# Default database name to connect to
DB_NAME=my_database

# ============================================
# Connection Pool Settings (OPTIONAL)
# ============================================

# Maximum number of connections in pool (default: 500)
# Optimized for high-traffic applications (adjust based on your server capacity)
# Recommended range: 100-1000 for production
DB_CONNECTION_LIMIT=500

# Maximum number of queued connection requests (default: 0 = unlimited)
# 0 = unlimited queue (recommended - waits when pool is full)
# Set to prevent memory issues during traffic spikes
DB_QUEUE_LIMIT=0

# Maximum number of idle connections to maintain in pool (default: 10)
# MySQL2 recommended value - helps manage connection lifecycle
DB_MAX_IDLE=10

# Idle connection timeout in milliseconds (default: 60000)
# Connections idle longer than this will be closed (60 seconds)
DB_IDLE_TIMEOUT=60000

# Connection timeout in milliseconds (default: 10000)
# Time to wait for initial database connection before throwing error
DB_CONNECT_TIMEOUT=10000

# Allow multiple SQL statements in a single query (default: true for backward compatibility)
# WARNING: Only disable if you have security concerns (SQL injection risk)
DB_MULTIPLE_STATEMENTS=true

# ============================================
# Redis Cache Configuration (OPTIONAL)
# ============================================

# Enable Redis caching (default: true)
# Set to 'false' to disable caching completely
REDIS_ENABLED=true

# Redis server hostname or IP address
REDIS_SERVER=localhost

# Redis port (default: 6379)
REDIS_PORT=6379

# Redis password (leave empty if no password)
REDIS_PASSWORD=

# Redis virtual host / namespace prefix
# All cache keys will be prefixed with this value
# Useful for multi-tenant applications or separate environments
# Example: REDIS_VHOST=app1: will create keys like "app1:users-cache"
REDIS_VHOST=

# ============================================
# Timezone Configuration (OPTIONAL)
# ============================================

# MySQL timezone offset (default: +00:00 UTC)
# Examples: +03:00 (Istanbul), -05:00 (New York), +00:00 (UTC)
TIMEZONE=+00:00

# ============================================
# v2.6.0 Smart Features (OPTIONAL) ðŸš€
# ============================================

# Enable ALL auto features at once (recommended for new projects)
# This enables: auto key generation + auto invalidation
CORE_AUTO_FEATURES=false

# Or enable features individually:
# CORE_AUTO_INVALIDATION=false

# ============================================
# Example Configurations for Different Environments
# ============================================

# Development Environment:
# DB_HOST=localhost
# DB_USERNAME=root
# DB_PASSWORD=
# REDIS_SERVER=localhost

# Production Environment (High Traffic - 1000+ concurrent users):
# DB_HOST=mysql-prod.example.com
# DB_USERNAME=prod_user
# DB_PASSWORD=strong_password_here
# DB_CONNECTION_LIMIT=500                 # Default (adjust based on load testing)
# DB_QUEUE_LIMIT=0                        # Unlimited queue (recommended)
# DB_CONNECT_TIMEOUT=10000                # 10 seconds
# REDIS_SERVER=redis-prod.example.com
# REDIS_PASSWORD=redis_password_here
# REDIS_VHOST=prod:
# CORE_AUTO_FEATURES=true                 # Enable smart features

# Docker Environment:
# DB_HOST=mysql
# DB_USERNAME=app_user
# DB_PASSWORD=app_password
# REDIS_SERVER=redis
